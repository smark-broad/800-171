---
###############################################################################
#
# Ansible remediation role for profile ospp
# Profile Title:  United States Government Configuration Baseline
# Profile Description:
# **Not applicable to CentOS Linux, included for reference only**
# 
# This compliance profile reflects the core set of security
# related configuration settings for deployment of Red Hat Enterprise
# Linux 7.x into U.S. Defense, Intelligence, and Civilian agencies.
# Development partners and sponsors include the U.S. National Institute
# of Standards and Technology (NIST), U.S. Department of Defense,
# the National Security Agency, and Red Hat.
# 
# This baseline implements configuration requirements from the following
# sources:
# 
# - Committee on National Security Systems Instruction No. 1253 (CNSSI 1253)
# - NIST Controlled Unclassified Information (NIST 800-171)
# - NIST 800-53 control selections for MODERATE impact systems (NIST 800-53)
# - U.S. Government Configuration Baseline (USGCB)
# - NIAP Protection Profile for General Purpose Operating Systems v4.0 (OSPP v4.0)
# - DISA Operating System Security Requirements Guide (OS SRG)
# 
# For any differing configuration requirements, e.g. password lengths, the stricter
# security setting was chosen. Security Requirement Traceability Guides (RTMs) and
# sample System Security Configuration Guides are provided via the
# scap-security-guide-docs package.
# 
# This profile reflects U.S. Government consensus content and is developed through
# the OpenSCAP/SCAP Security Guide initiative, championed by the National
# Security Agency. Except for differences in formatting to accommodate
# publishing processes, this profile mirrors OpenSCAP/SCAP Security Guide
# content as minor divergences, such as bugfixes, work through the
# consensus and release processes.
#
# Benchmark ID:  RHEL-7
# Benchmark Version:  0.1.40
#
# XCCDF Version:  1.1
#
# This file was generated by OpenSCAP 1.2.17 using:
# 	$ oscap xccdf generate fix --profile ospp --template urn:xccdf:fix:script:ansible xccdf-file.xml 
#
# This script is generated from an OpenSCAP profile without preliminary evaluation.
# It attempts to fix every selected rule, even if the system is already compliant.
#
# How to apply this remediation role:
# $ ansible-playbook -i "192.168.1.155," playbook.yml
# $ ansible-playbook -i inventory.ini playbook.yml
#
###############################################################################


 - hosts: all
   pre_tasks:
     - name: Verify Ansible meets SCAP-Security-Guide version requirements.
       assert:
         that: "ansible_version.full is version_compare('2.3', '>=')"
         msg: >
           "You must update Ansible to at least version 2.3 to use this role."
          
   vars:
   tasks:
    - name: Ensure rsh is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - rsh
      tags:
        - package_rsh_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-171-3.1.13
    
    - name: Disable service rlogin
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - rlogin
      tags:
        - service_rlogin_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    
    
    - name: Disable socket of service rlogin if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - rlogin.socket
      tags:
        - service_rlogin_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    
    - name: Disable service rexec
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - rexec
      tags:
        - service_rexec_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    
    
    - name: Disable socket of service rexec if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - rexec.socket
      tags:
        - service_rexec_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    
    - name: Disable service rsh
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - rsh
      tags:
        - service_rsh_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    
    
    - name: Disable socket of service rsh if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - rsh.socket
      tags:
        - service_rsh_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    
    - name: Ensure rsh-server is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - rsh-server
      tags:
        - package_rsh-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)
        - DISA-STIG-RHEL-07-020000
    
    - block:
        - name: "Detect shosts.equiv Files on the System"
          find:
              paths: /
              recurse: yes
              patterns: shosts.equiv
          check_mode: no
          register: shosts_equiv_locations
    
        - name: "Remove Rsh Trust Files"
          file:
              path: "{{ item.path }}"
              state: absent
          with_items: "{{ shosts_equiv_locations.files }}"
          when: shosts_equiv_locations
      tags:
        - no_rsh_trust_files
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
    
    - name: Ensure telnet is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - telnet
      tags:
        - package_telnet_removed
        - low_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-171-3.1.13
    
    - name: Disable service telnet
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - telnet
      tags:
        - service_telnet_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    
    
    - name: Disable socket of service telnet if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - telnet.socket
      tags:
        - service_telnet_disabled
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.4.7
    
    - name: Ensure telnet-server is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - telnet-server
      tags:
        - package_telnet-server_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)
        - DISA-STIG-RHEL-07-021710
    
    - name: Ensure ypbind is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - ypbind
      tags:
        - package_ypbind_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
    
    - name: Disable service ypbind
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - ypbind
      tags:
        - service_ypbind_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
    
    
    - name: Disable socket of service ypbind if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - ypbind.socket
      tags:
        - service_ypbind_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
    
    - name: Ensure ypserv is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - ypserv
      tags:
        - package_ypserv_removed
        - high_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7(a)
        - DISA-STIG-RHEL-07-020010
    
    - name: Disable service xinetd
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - xinetd
      tags:
        - service_xinetd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.7
    
    
    - name: Disable socket of service xinetd if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - xinetd.socket
      tags:
        - service_xinetd_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.7
    
    - name: Ensure xinetd is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - xinetd
      tags:
        - package_xinetd_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
    
    - name: Ensure talk is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - talk
      tags:
        - package_talk_removed
        - unknown_severity
        - disable_strategy
        - low_complexity
        - low_disruption
    
    - name: Ensure talk-server is removed
      package:
        name: "{{item}}"
        state: absent
      with_items:
        - talk-server
      tags:
        - package_talk-server_removed
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
    
    - name: Ensure group owner 0 on /etc/cron.allow
      file:
        path: "{{ item }}"
        group: 0
      with_items:
        - /etc/cron.allow
      tags:
        - file_groupowner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-6
        - DISA-STIG-RHEL-07-021120
    
    - name: Ensure owner 0 on /etc/cron.allow
      file:
        path: "{{ item }}"
        owner: 0
      with_items:
        - /etc/cron.allow
      tags:
        - file_owner_cron_allow
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-6
        - DISA-STIG-RHEL-07-021110
    
    - name: Enable service crond
      service:
        name: "{{item}}"
        enabled: "yes"
        state: "started"
      with_items:
        - crond
      tags:
        - service_crond_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-7
    
    - name: Disable service zebra
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - zebra
      tags:
        - service_zebra_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-SC-32
    
    
    - name: Disable socket of service zebra if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - zebra.socket
      tags:
        - service_zebra_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-SC-32
    
    - name: "Configure SSSD's Memory Cache to Expire"
      ini_file:
        dest: /etc/sssd/sssd.conf
        section: nss
        option: memcache_timeout
        value: 86400
        create: yes
      tags:
        - sssd_memcache_timeout
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-IA-5(10)
        - NIST-800-53-IA-5(13)
    
    - name: "Configure SSD to Expire Offline Credentials"
      ini_file:
        dest: /etc/sssd/sssd.conf
        section: pam
        option: offline_credentials_expiration
        value: 1
        create: yes
      tags:
        - sssd_offline_cred_expiration
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-IA-5(13)
    
    - name: "Configure SSSD to Expire SSH Known Hosts"
      ini_file:
        dest: /etc/sssd/sssd.conf
        section: ssh
        option: ssh_known_hosts_timeout
        value: 86400
        create: yes
      tags:
        - sssd_ssh_known_hosts_timeout
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-IA-5(13)
    
    - name: Disable service kdump
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - kdump
      tags:
        - service_kdump_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-CM-6(b)
        - DISA-STIG-RHEL-07-021300
    
    
    - name: Disable socket of service kdump if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - kdump.socket
      tags:
        - service_kdump_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-CM-7
        - NIST-800-53-CM-6(b)
        - DISA-STIG-RHEL-07-021300
    
    - name: "Disable SSH Support for User Known Hosts"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^IgnoreUserKnownHosts
        line: IgnoreUserKnownHosts yes
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_user_known_hosts
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040380
    
    - name: Disable SSH Access via Empty Passwords
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^PermitEmptyPasswords
        line: PermitEmptyPasswords no
        validate: sshd -t -f %s
      tags:
        - sshd_disable_empty_passwords
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-010300
    
    - name: Set SSH Client Alive Count
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^ClientAliveCountMax
        line: ClientAliveCountMax 0
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_set_keepalive
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(5)
        - NIST-800-53-SA-8
        - NIST-800-53-AC-12
        - NIST-800-171-3.1.11
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040340
    
    - name: Disable SSH Support for Rhosts RSA Authentication
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^RhostsRSAAuthentication
        line: RhostsRSAAuthentication no
        validate: sshd -t -f %s
      tags:
        - sshd_disable_rhosts_rsa
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040330
    
    - name: Enable SSH Warning Banner
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^Banner
        line: Banner /etc/issue
        validate: sshd -t -f %s
      tags:
        - sshd_enable_warning_banner
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-171-3.1.9
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040170
    
    - name: XCCDF Value sshd_approved_macs # promote to variable
      set_fact:
        sshd_approved_macs: !!str |-
            hmac-sha2-512,hmac-sha2-256,hmac-sha1,hmac-sha1-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512-etm@openssh.com
      tags:
        - always
    
    - name: "Use Only Approved MACs"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^MACs
        line: "MACs {{ sshd_approved_macs }}"
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_use_approved_macs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(2)
        - NIST-800-53-IA-7
        - NIST-800-53-SC-13
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.11
        - NIST-800-171-3.13.8
        - DISA-STIG-RHEL-07-040400
    
    - name: Do Not Allow SSH Environment Options
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^PermitUserEnvironment
        line: PermitUserEnvironment no
        validate: sshd -t -f %s
      tags:
        - sshd_do_not_permit_user_env
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-010460
    
    - name: "Disable Kerberos Authentication"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?kerberosauthentication
        line: KerberosAuthentication no
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_kerb_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(c)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040440
    
    
    - name: "Allow Only SSH Protocol 2"
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: "^Protocol [0-9]"
        line: "Protocol 2"
        validate: sshd -t -f %s
      #notify: :reload ssh
      tags:
        - sshd_allow_only_protocol2
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8).1(ii)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-171-3.1.13
        - NIST-800-171-3.5.4
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040390
    
    - name: Disable SSH Support for .rhosts Files
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^IgnoreRhosts
        line: IgnoreRhosts yes
        validate: sshd -t -f %s
      tags:
        - sshd_disable_rhosts
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(a)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040350
    
    - name: XCCDF Value sshd_idle_timeout_value # promote to variable
      set_fact:
        sshd_idle_timeout_value: !!str |-
            600
      tags:
        - always
    
    - name: Set SSH Idle Timeout Interval
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^ClientAliveInterval
        line: "ClientAliveInterval {{ sshd_idle_timeout_value }}"
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_set_idle_timeout
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(5)
        - NIST-800-53-SA-8(i)
        - NIST-800-53-AC-12
        - NIST-800-171-3.1.11
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040320
    
    - name: Enable Encrypted X11 Forwarding
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^X11Forwarding
        line: X11Forwarding yes
        validate: sshd -t -f %s
      tags:
        - sshd_enable_x11_forwarding
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-2(1)(b)
        - NIST-800-171-3.1.13
        - DISA-STIG-RHEL-07-040710
    
    - name: Use Only Approved Ciphers
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^Ciphers
        line: Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-cbc,3des-cbc,aes192-cbc,aes256-cbc
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_use_approved_ciphers
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-3
        - NIST-800-53-AC-17(2)
        - NIST-800-53-AU-10(5)
        - NIST-800-53-CM-6(b)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-7
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.11
        - NIST-800-171-3.13.8
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040110
    
    - name: Disable Host-Based Authentication
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: ^HostbasedAuthentication
        line: HostbasedAuthentication no
      tags:
        - disable_host_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-3
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.12
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-010470
    
    
    - name: Ensure firewalld is installed
      package:
        name: "{{item}}"
        state: present
      with_items:
        - firewalld
      tags:
        - firewalld_sshd_port_enabled
        - unknown_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - NIST-800-171-3.1.12
    
    - name: XCCDF Value sshd_listening_port # promote to variable
      set_fact:
        sshd_listening_port: !!str |-
            22
      tags:
        - always
    
    - name: Enable SSHD in firewalld (custom port)
      firewalld:
        port: "{{ sshd_listening_port }}/tcp"
        permanent: yes
        state: enabled
      when: sshd_listening_port != 22
      tags:
        - firewalld_sshd_port_enabled
        - unknown_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - NIST-800-171-3.1.12
    
    - name: Enable SSHD in firewalld (default port)
      firewalld:
        service: ssh
        permanent: yes
        state: enabled
      when: sshd_listening_port == 22
      tags:
        - firewalld_sshd_port_enabled
        - unknown_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - NIST-800-171-3.1.12
    
    - name: "Enable Use of Strict Mode Checking"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?strictmodes
        line: StrictModes yes
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_enable_strictmodes
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040450
    
    - name: "Enable use of Privilege Separation"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?useprivilegeseparation
        line: UsePrivilegeSeparation sandbox
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_use_priv_separation
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040460
    
    - name: "Disable GSSAPI Authentication"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?gssapiauthentication
        line: GSSAPIAuthentication no
        validate: sshd -t -f %s
      #notify: sshd -t -f %s
      tags:
        - sshd_disable_gssapi_auth
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(c)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040430
    
    - name: "Disable Compression or Set Compression to delayed"
      lineinfile:
        create: yes
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?compression 
        line: Compression delayed
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_compression
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.12
        - DISA-STIG-RHEL-07-040470
    
    - name: "Disable SSH Root Login"
      lineinfile:
        create: yes
        dest: "/etc/ssh/sshd_config"
        regexp: "^PermitRootLogin"
        line: "PermitRootLogin no"
        insertafter: '(?i)^#?authentication'
        validate: sshd -t -f %s
      #notify: restart sshd
      tags:
        - sshd_disable_root_login
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-3
        - NIST-800-53-AC-6(2)
        - NIST-800-53-IA-2(1)
        - NIST-800-53-IA-2(5)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - CJIS-5.5.6
        - DISA-STIG-RHEL-07-040370
    
    - name: Enable service sshd
      service:
        name: "{{item}}"
        enabled: "yes"
        state: "started"
      with_items:
        - sshd
      tags:
        - service_sshd_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-SC-8
        - NIST-800-171-3.1.13
        - NIST-800-171-3.5.4
        - NIST-800-171-3.13.8
        - DISA-STIG-RHEL-07-040310
    
    - name: Ensure permission 0644 on /etc/ssh/*.pub
      file:
        path: "{{ item }}"
        mode: 0644
      with_items:
        - /etc/ssh/*.pub
      tags:
        - file_permissions_sshd_pub_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - DISA-STIG-RHEL-07-040410
    
    - name: Ensure permission 0600 on /etc/ssh/*_key
      file:
        path: "{{ item }}"
        mode: 0600
      with_items:
        - /etc/ssh/*_key
      tags:
        - file_permissions_sshd_private_key
        - medium_severity
        - configure_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.13
        - NIST-800-171-3.13.10
        - DISA-STIG-RHEL-07-040420
    
    - name: XCCDF Value rsyslog_remote_loghost_address # promote to variable
      set_fact:
        rsyslog_remote_loghost_address: !!str |-
            logcollector
      tags:
        - always
    
    - name: "Set rsyslog remote loghost"
      lineinfile:
        dest: /etc/rsyslog.conf
        regexp: "^\\*\\.\\*"
        line: "*.* @@{{ rsyslog_remote_loghost_address }}"
        create: yes
      tags:
        - rsyslog_remote_loghost
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(2)
        - NIST-800-53-AU-4(1)
        - NIST-800-53-AU-9
        - DISA-STIG-RHEL-07-031000
    
    - name: Enable service firewalld
      service:
        name: "{{item}}"
        enabled: "yes"
        state: "started"
      with_items:
        - firewalld
      tags:
        - service_firewalld_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.3
        - NIST-800-171-3.4.7
        - DISA-STIG-RHEL-07-040520
    
    - name: XCCDF Value sysctl_net_ipv6_conf_default_accept_source_route_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_default_accept_source_route_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.default.accept_source_route
        value: "{{ sysctl_net_ipv6_conf_default_accept_source_route_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_default_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv6_conf_all_forwarding_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_all_forwarding_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.all.forwarding is set
      sysctl:
        name: net.ipv6.conf.all.forwarding
        value: "{{ sysctl_net_ipv6_conf_all_forwarding_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_forwarding
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
    
    - name: XCCDF Value sysctl_net_ipv6_conf_all_accept_source_route_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_all_accept_source_route_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv6.conf.all.accept_source_route
        value: "{{ sysctl_net_ipv6_conf_all_accept_source_route_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-171-3.1.20
        - DISA-STIG-RHEL-07-040830
    
    - name: XCCDF Value sysctl_net_ipv6_conf_all_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_all_accept_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.all.accept_redirects
        value: "{{ sysctl_net_ipv6_conf_all_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv6_conf_default_accept_ra_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_default_accept_ra_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.default.accept_ra is set
      sysctl:
        name: net.ipv6.conf.default.accept_ra
        value: "{{ sysctl_net_ipv6_conf_default_accept_ra_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_default_accept_ra
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv6_conf_all_accept_ra_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_all_accept_ra_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.all.accept_ra is set
      sysctl:
        name: net.ipv6.conf.all.accept_ra
        value: "{{ sysctl_net_ipv6_conf_all_accept_ra_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_accept_ra
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv6_conf_default_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv6_conf_default_accept_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv6.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv6.conf.default.accept_redirects
        value: "{{ sysctl_net_ipv6_conf_default_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_default_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: Ensure sysctl net.ipv6.conf.all.disable_ipv6 is set to 1
      sysctl:
        name: net.ipv6.conf.all.disable_ipv6
        value: 1
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv6_conf_all_disable_ipv6
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_default_accept_source_route_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_accept_source_route_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.default.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.default.accept_source_route
        value: "{{ sysctl_net_ipv4_conf_default_accept_source_route_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040620
    
    - name: XCCDF Value sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value # promote to variable
      set_fact:
        sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.icmp_echo_ignore_broadcasts is set
      sysctl:
        name: net.ipv4.icmp_echo_ignore_broadcasts
        value: "{{ sysctl_net_ipv4_icmp_echo_ignore_broadcasts_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_icmp_echo_ignore_broadcasts
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040630
    
    - name: XCCDF Value sysctl_net_ipv4_conf_default_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_accept_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.default.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.default.accept_redirects
        value: "{{ sysctl_net_ipv4_conf_default_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040640
    
    - name: XCCDF Value sysctl_net_ipv4_conf_default_rp_filter_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_rp_filter_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.default.rp_filter is set
      sysctl:
        name: net.ipv4.conf.default.rp_filter
        value: "{{ sysctl_net_ipv4_conf_default_rp_filter_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_rp_filter
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_all_secure_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_secure_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.all.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.all.secure_redirects
        value: "{{ sysctl_net_ipv4_conf_all_secure_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_secure_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_all_accept_source_route_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_accept_source_route_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.all.accept_source_route is set
      sysctl:
        name: net.ipv4.conf.all.accept_source_route
        value: "{{ sysctl_net_ipv4_conf_all_accept_source_route_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_accept_source_route
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - DISA-STIG-RHEL-07-040610
    
    - name: XCCDF Value sysctl_net_ipv4_tcp_syncookies_value # promote to variable
      set_fact:
        sysctl_net_ipv4_tcp_syncookies_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.tcp_syncookies is set
      sysctl:
        name: net.ipv4.tcp_syncookies
        value: "{{ sysctl_net_ipv4_tcp_syncookies_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_tcp_syncookies
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-SC-5(1)(2)
        - NIST-800-53-SC-5(2)
        - NIST-800-53-SC-5(3)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
    
    - name: XCCDF Value sysctl_net_ipv4_conf_all_accept_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_accept_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.all.accept_redirects is set
      sysctl:
        name: net.ipv4.conf.all.accept_redirects
        value: "{{ sysctl_net_ipv4_conf_all_accept_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_accept_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040641
    
    - name: XCCDF Value sysctl_net_ipv4_conf_all_log_martians_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_log_martians_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.all.log_martians is set
      sysctl:
        name: net.ipv4.conf.all.log_martians
        value: "{{ sysctl_net_ipv4_conf_all_log_martians_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_log_martians
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5(3)
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_all_rp_filter_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_all_rp_filter_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.all.rp_filter is set
      sysctl:
        name: net.ipv4.conf.all.rp_filter
        value: "{{ sysctl_net_ipv4_conf_all_rp_filter_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_rp_filter
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value # promote to variable
      set_fact:
        sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.icmp_ignore_bogus_error_responses is set
      sysctl:
        name: net.ipv4.icmp_ignore_bogus_error_responses
        value: "{{ sysctl_net_ipv4_icmp_ignore_bogus_error_responses_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_icmp_ignore_bogus_error_responses
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_default_secure_redirects_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_secure_redirects_value: !!str |-
            0
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.default.secure_redirects is set
      sysctl:
        name: net.ipv4.conf.default.secure_redirects
        value: "{{ sysctl_net_ipv4_conf_default_secure_redirects_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_secure_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
    
    - name: XCCDF Value sysctl_net_ipv4_conf_default_log_martians_value # promote to variable
      set_fact:
        sysctl_net_ipv4_conf_default_log_martians_value: !!str |-
            1
      tags:
        - always
    
    - name: Ensure sysctl net.ipv4.conf.default.log_martians is set
      sysctl:
        name: net.ipv4.conf.default.log_martians
        value: "{{ sysctl_net_ipv4_conf_default_log_martians_value }}"
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_log_martians
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5(3)
        - NIST-800-171-3.1.20
    
    - name: Ensure sysctl net.ipv4.ip_forward is set to 0
      sysctl:
        name: net.ipv4.ip_forward
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_ip_forward
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-32
        - NIST-800-171-3.1.20
        - DISA-STIG-RHEL-07-040740
    
    - name: Ensure sysctl net.ipv4.conf.all.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.all.send_redirects
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_all_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5(1)
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040660
    
    - name: Ensure sysctl net.ipv4.conf.default.send_redirects is set to 0
      sysctl:
        name: net.ipv4.conf.default.send_redirects
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_net_ipv4_conf_default_send_redirects
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-4
        - NIST-800-53-CM-7
        - NIST-800-53-SC-5
        - NIST-800-53-SC-7
        - NIST-800-171-3.1.20
        - CJIS-5.10.1.1
        - DISA-STIG-RHEL-07-040650
    
    - name: Ensure kernel module 'dccp' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - dccp
      tags:
        - kernel_module_dccp_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
        - CJIS-5.10.1
        - DISA-STIG-RHEL-07-020101
    
    - name: Ensure kernel module 'sctp' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - sctp
      tags:
        - kernel_module_sctp_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
        - CJIS-5.10.1
    
    - name: Ensure kernel module 'bluetooth' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - bluetooth
      tags:
        - kernel_module_bluetooth_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-AC-18(a)
        - NIST-800-53-AC-18(d)
        - NIST-800-53-AC-18(3)
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.16
        - CJIS-5.13.1.3
    
    - name: Disable service bluetooth
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - bluetooth
      tags:
        - service_bluetooth_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-AC-18(a)
        - NIST-800-53-AC-18(d)
        - NIST-800-53-AC-18(3)
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.16
    
    
    - name: Disable socket of service bluetooth if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - bluetooth.socket
      tags:
        - service_bluetooth_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(8)
        - NIST-800-53-AC-18(a)
        - NIST-800-53-AC-18(d)
        - NIST-800-53-AC-18(3)
        - NIST-800-53-CM-7
        - NIST-800-171-3.1.16
    
    - name: XCCDF Value var_ssh_sysadm_login # promote to variable
      set_fact:
        var_ssh_sysadm_login: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean ssh_sysadm_login accordingly
      seboolean:
        name: ssh_sysadm_login
        state: "{{ var_ssh_sysadm_login }}"
        persistent: yes
      tags:
        - sebool_ssh_sysadm_login
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_login_console_enabled # promote to variable
      set_fact:
        var_login_console_enabled: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean login_console_enabled accordingly
      seboolean:
        name: login_console_enabled
        state: "{{ var_login_console_enabled }}"
        persistent: yes
      tags:
        - sebool_login_console_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_mount_anyfile # promote to variable
      set_fact:
        var_mount_anyfile: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean mount_anyfile accordingly
      seboolean:
        name: mount_anyfile
        state: "{{ var_mount_anyfile }}"
        persistent: yes
      tags:
        - sebool_mount_anyfile
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_cron_can_relabel # promote to variable
      set_fact:
        var_cron_can_relabel: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean cron_can_relabel accordingly
      seboolean:
        name: cron_can_relabel
        state: "{{ var_cron_can_relabel }}"
        persistent: yes
      tags:
        - sebool_cron_can_relabel
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_secure_mode # promote to variable
      set_fact:
        var_secure_mode: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean secure_mode accordingly
      seboolean:
        name: secure_mode
        state: "{{ var_secure_mode }}"
        persistent: yes
      tags:
        - sebool_secure_mode
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_logadm_exec_content # promote to variable
      set_fact:
        var_logadm_exec_content: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean logadm_exec_content accordingly
      seboolean:
        name: logadm_exec_content
        state: "{{ var_logadm_exec_content }}"
        persistent: yes
      tags:
        - sebool_logadm_exec_content
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_user_exec_content # promote to variable
      set_fact:
        var_user_exec_content: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean user_exec_content accordingly
      seboolean:
        name: user_exec_content
        state: "{{ var_user_exec_content }}"
        persistent: yes
      tags:
        - sebool_user_exec_content
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_deny_ptrace # promote to variable
      set_fact:
        var_deny_ptrace: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean deny_ptrace accordingly
      seboolean:
        name: deny_ptrace
        state: "{{ var_deny_ptrace }}"
        persistent: yes
      tags:
        - sebool_deny_ptrace
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xserver_object_manager # promote to variable
      set_fact:
        var_xserver_object_manager: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xserver_object_manager accordingly
      seboolean:
        name: xserver_object_manager
        state: "{{ var_xserver_object_manager }}"
        persistent: yes
      tags:
        - sebool_xserver_object_manager
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xdm_sysadm_login # promote to variable
      set_fact:
        var_xdm_sysadm_login: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xdm_sysadm_login accordingly
      seboolean:
        name: xdm_sysadm_login
        state: "{{ var_xdm_sysadm_login }}"
        persistent: yes
      tags:
        - sebool_xdm_sysadm_login
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_mysql_connect_enabled # promote to variable
      set_fact:
        var_selinuxuser_mysql_connect_enabled: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_mysql_connect_enabled accordingly
      seboolean:
        name: selinuxuser_mysql_connect_enabled
        state: "{{ var_selinuxuser_mysql_connect_enabled }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_mysql_connect_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xdm_bind_vnc_tcp_port # promote to variable
      set_fact:
        var_xdm_bind_vnc_tcp_port: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xdm_bind_vnc_tcp_port accordingly
      seboolean:
        name: xdm_bind_vnc_tcp_port
        state: "{{ var_xdm_bind_vnc_tcp_port }}"
        persistent: yes
      tags:
        - sebool_xdm_bind_vnc_tcp_port
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_ssh_keysign # promote to variable
      set_fact:
        var_ssh_keysign: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean ssh_keysign accordingly
      seboolean:
        name: ssh_keysign
        state: "{{ var_ssh_keysign }}"
        persistent: yes
      tags:
        - sebool_ssh_keysign
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_staff_exec_content # promote to variable
      set_fact:
        var_staff_exec_content: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean staff_exec_content accordingly
      seboolean:
        name: staff_exec_content
        state: "{{ var_staff_exec_content }}"
        persistent: yes
      tags:
        - sebool_staff_exec_content
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_cron_userdomain_transition # promote to variable
      set_fact:
        var_cron_userdomain_transition: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean cron_userdomain_transition accordingly
      seboolean:
        name: cron_userdomain_transition
        state: "{{ var_cron_userdomain_transition }}"
        persistent: yes
      tags:
        - sebool_cron_userdomain_transition
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xguest_mount_media # promote to variable
      set_fact:
        var_xguest_mount_media: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xguest_mount_media accordingly
      seboolean:
        name: xguest_mount_media
        state: "{{ var_xguest_mount_media }}"
        persistent: yes
      tags:
        - sebool_xguest_mount_media
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_rw_noexattrfile # promote to variable
      set_fact:
        var_selinuxuser_rw_noexattrfile: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_rw_noexattrfile accordingly
      seboolean:
        name: selinuxuser_rw_noexattrfile
        state: "{{ var_selinuxuser_rw_noexattrfile }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_rw_noexattrfile
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_deny_execmem # promote to variable
      set_fact:
        var_deny_execmem: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean deny_execmem accordingly
      seboolean:
        name: deny_execmem
        state: "{{ var_deny_execmem }}"
        persistent: yes
      tags:
        - sebool_deny_execmem
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_ssh_chroot_rw_homedirs # promote to variable
      set_fact:
        var_ssh_chroot_rw_homedirs: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean ssh_chroot_rw_homedirs accordingly
      seboolean:
        name: ssh_chroot_rw_homedirs
        state: "{{ var_ssh_chroot_rw_homedirs }}"
        persistent: yes
      tags:
        - sebool_ssh_chroot_rw_homedirs
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_abrt_anon_write # promote to variable
      set_fact:
        var_abrt_anon_write: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean abrt_anon_write accordingly
      seboolean:
        name: abrt_anon_write
        state: "{{ var_abrt_anon_write }}"
        persistent: yes
      tags:
        - sebool_abrt_anon_write
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - NIST-800-171-3.7.2
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_kerberos_enabled # promote to variable
      set_fact:
        var_kerberos_enabled: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean kerberos_enabled accordingly
      seboolean:
        name: kerberos_enabled
        state: "{{ var_kerberos_enabled }}"
        persistent: yes
      tags:
        - sebool_kerberos_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_logging_syslogd_use_tty # promote to variable
      set_fact:
        var_logging_syslogd_use_tty: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean logging_syslogd_use_tty accordingly
      seboolean:
        name: logging_syslogd_use_tty
        state: "{{ var_logging_syslogd_use_tty }}"
        persistent: yes
      tags:
        - sebool_logging_syslogd_use_tty
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_abrt_handle_event # promote to variable
      set_fact:
        var_abrt_handle_event: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean abrt_handle_event accordingly
      seboolean:
        name: abrt_handle_event
        state: "{{ var_abrt_handle_event }}"
        persistent: yes
      tags:
        - sebool_abrt_handle_event
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - NIST-800-171-3.7.2
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_mock_enable_homedirs # promote to variable
      set_fact:
        var_mock_enable_homedirs: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean mock_enable_homedirs accordingly
      seboolean:
        name: mock_enable_homedirs
        state: "{{ var_mock_enable_homedirs }}"
        persistent: yes
      tags:
        - sebool_mock_enable_homedirs
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_cron_system_cronjob_use_shares # promote to variable
      set_fact:
        var_cron_system_cronjob_use_shares: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean cron_system_cronjob_use_shares accordingly
      seboolean:
        name: cron_system_cronjob_use_shares
        state: "{{ var_cron_system_cronjob_use_shares }}"
        persistent: yes
      tags:
        - sebool_cron_system_cronjob_use_shares
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_auditadm_exec_content # promote to variable
      set_fact:
        var_auditadm_exec_content: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean auditadm_exec_content accordingly
      seboolean:
        name: auditadm_exec_content
        state: "{{ var_auditadm_exec_content }}"
        persistent: yes
      tags:
        - sebool_auditadm_exec_content
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - NIST-800-171-80424-5
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_unconfined_login # promote to variable
      set_fact:
        var_unconfined_login: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean unconfined_login accordingly
      seboolean:
        name: unconfined_login
        state: "{{ var_unconfined_login }}"
        persistent: yes
      tags:
        - sebool_unconfined_login
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_logging_syslogd_can_sendmail # promote to variable
      set_fact:
        var_logging_syslogd_can_sendmail: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean logging_syslogd_can_sendmail accordingly
      seboolean:
        name: logging_syslogd_can_sendmail
        state: "{{ var_logging_syslogd_can_sendmail }}"
        persistent: yes
      tags:
        - sebool_logging_syslogd_can_sendmail
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_postgresql_connect_enabled # promote to variable
      set_fact:
        var_selinuxuser_postgresql_connect_enabled: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_postgresql_connect_enabled accordingly
      seboolean:
        name: selinuxuser_postgresql_connect_enabled
        state: "{{ var_selinuxuser_postgresql_connect_enabled }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_postgresql_connect_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_daemons_use_tcp_wrapper # promote to variable
      set_fact:
        var_daemons_use_tcp_wrapper: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean daemons_use_tcp_wrapper accordingly
      seboolean:
        name: daemons_use_tcp_wrapper
        state: "{{ var_daemons_use_tcp_wrapper }}"
        persistent: yes
      tags:
        - sebool_daemons_use_tcp_wrapper
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_execstack # promote to variable
      set_fact:
        var_selinuxuser_execstack: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_execstack accordingly
      seboolean:
        name: selinuxuser_execstack
        state: "{{ var_selinuxuser_execstack }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_execstack
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_abrt_upload_watch_anon_write # promote to variable
      set_fact:
        var_abrt_upload_watch_anon_write: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean abrt_upload_watch_anon_write accordingly
      seboolean:
        name: abrt_upload_watch_anon_write
        state: "{{ var_abrt_upload_watch_anon_write }}"
        persistent: yes
      tags:
        - sebool_abrt_upload_watch_anon_write
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - NIST-800-171-3.7.2
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_daemons_use_tty # promote to variable
      set_fact:
        var_daemons_use_tty: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean daemons_use_tty accordingly
      seboolean:
        name: daemons_use_tty
        state: "{{ var_daemons_use_tty }}"
        persistent: yes
      tags:
        - sebool_daemons_use_tty
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_tcp_server # promote to variable
      set_fact:
        var_selinuxuser_tcp_server: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_tcp_server accordingly
      seboolean:
        name: selinuxuser_tcp_server
        state: "{{ var_selinuxuser_tcp_server }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_tcp_server
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_execheap # promote to variable
      set_fact:
        var_selinuxuser_execheap: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_execheap accordingly
      seboolean:
        name: selinuxuser_execheap
        state: "{{ var_selinuxuser_execheap }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_execheap
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_direct_dri_enabled # promote to variable
      set_fact:
        var_selinuxuser_direct_dri_enabled: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_direct_dri_enabled accordingly
      seboolean:
        name: selinuxuser_direct_dri_enabled
        state: "{{ var_selinuxuser_direct_dri_enabled }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_direct_dri_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xserver_execmem # promote to variable
      set_fact:
        var_xserver_execmem: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xserver_execmem accordingly
      seboolean:
        name: xserver_execmem
        state: "{{ var_xserver_execmem }}"
        persistent: yes
      tags:
        - sebool_xserver_execmem
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xserver_clients_write_xshm # promote to variable
      set_fact:
        var_xserver_clients_write_xshm: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xserver_clients_write_xshm accordingly
      seboolean:
        name: xserver_clients_write_xshm
        state: "{{ var_xserver_clients_write_xshm }}"
        persistent: yes
      tags:
        - sebool_xserver_clients_write_xshm
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_use_ecryptfs_home_dirs # promote to variable
      set_fact:
        var_use_ecryptfs_home_dirs: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean use_ecryptfs_home_dirs accordingly
      seboolean:
        name: use_ecryptfs_home_dirs
        state: "{{ var_use_ecryptfs_home_dirs }}"
        persistent: yes
      tags:
        - sebool_use_ecryptfs_home_dirs
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xguest_exec_content # promote to variable
      set_fact:
        var_xguest_exec_content: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xguest_exec_content accordingly
      seboolean:
        name: xguest_exec_content
        state: "{{ var_xguest_exec_content }}"
        persistent: yes
      tags:
        - sebool_xguest_exec_content
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_domain_kernel_load_modules # promote to variable
      set_fact:
        var_domain_kernel_load_modules: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean domain_kernel_load_modules accordingly
      seboolean:
        name: domain_kernel_load_modules
        state: "{{ var_domain_kernel_load_modules }}"
        persistent: yes
      tags:
        - sebool_domain_kernel_load_modules
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_gpg_web_anon_write # promote to variable
      set_fact:
        var_gpg_web_anon_write: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean gpg_web_anon_write accordingly
      seboolean:
        name: gpg_web_anon_write
        state: "{{ var_gpg_web_anon_write }}"
        persistent: yes
      tags:
        - sebool_gpg_web_anon_write
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_execmod # promote to variable
      set_fact:
        var_selinuxuser_execmod: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_execmod accordingly
      seboolean:
        name: selinuxuser_execmod
        state: "{{ var_selinuxuser_execmod }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_execmod
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_udp_server # promote to variable
      set_fact:
        var_selinuxuser_udp_server: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_udp_server accordingly
      seboolean:
        name: selinuxuser_udp_server
        state: "{{ var_selinuxuser_udp_server }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_udp_server
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_mmap_low_allowed # promote to variable
      set_fact:
        var_mmap_low_allowed: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean mmap_low_allowed accordingly
      seboolean:
        name: mmap_low_allowed
        state: "{{ var_mmap_low_allowed }}"
        persistent: yes
      tags:
        - sebool_mmap_low_allowed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_share_music # promote to variable
      set_fact:
        var_selinuxuser_share_music: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_share_music accordingly
      seboolean:
        name: selinuxuser_share_music
        state: "{{ var_selinuxuser_share_music }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_share_music
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_domain_fd_use # promote to variable
      set_fact:
        var_domain_fd_use: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean domain_fd_use accordingly
      seboolean:
        name: domain_fd_use
        state: "{{ var_domain_fd_use }}"
        persistent: yes
      tags:
        - sebool_domain_fd_use
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_use_ssh_chroot # promote to variable
      set_fact:
        var_selinuxuser_use_ssh_chroot: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_use_ssh_chroot accordingly
      seboolean:
        name: selinuxuser_use_ssh_chroot
        state: "{{ var_selinuxuser_use_ssh_chroot }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_use_ssh_chroot
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xguest_connect_network # promote to variable
      set_fact:
        var_xguest_connect_network: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xguest_connect_network accordingly
      seboolean:
        name: xguest_connect_network
        state: "{{ var_xguest_connect_network }}"
        persistent: yes
      tags:
        - sebool_xguest_connect_network
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xdm_write_home # promote to variable
      set_fact:
        var_xdm_write_home: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xdm_write_home accordingly
      seboolean:
        name: xdm_write_home
        state: "{{ var_xdm_write_home }}"
        persistent: yes
      tags:
        - sebool_xdm_write_home
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_sysadm_exec_content # promote to variable
      set_fact:
        var_sysadm_exec_content: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean sysadm_exec_content accordingly
      seboolean:
        name: sysadm_exec_content
        state: "{{ var_sysadm_exec_content }}"
        persistent: yes
      tags:
        - sebool_sysadm_exec_content
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xguest_use_bluetooth # promote to variable
      set_fact:
        var_xguest_use_bluetooth: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xguest_use_bluetooth accordingly
      seboolean:
        name: xguest_use_bluetooth
        state: "{{ var_xguest_use_bluetooth }}"
        persistent: yes
      tags:
        - sebool_xguest_use_bluetooth
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_guest_exec_content # promote to variable
      set_fact:
        var_guest_exec_content: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean guest_exec_content accordingly
      seboolean:
        name: guest_exec_content
        state: "{{ var_guest_exec_content }}"
        persistent: yes
      tags:
        - sebool_guest_exec_content
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_daemons_dump_core # promote to variable
      set_fact:
        var_daemons_dump_core: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean daemons_dump_core accordingly
      seboolean:
        name: daemons_dump_core
        state: "{{ var_daemons_dump_core }}"
        persistent: yes
      tags:
        - sebool_daemons_dump_core
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_xdm_exec_bootloader # promote to variable
      set_fact:
        var_xdm_exec_bootloader: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean xdm_exec_bootloader accordingly
      seboolean:
        name: xdm_exec_bootloader
        state: "{{ var_xdm_exec_bootloader }}"
        persistent: yes
      tags:
        - sebool_xdm_exec_bootloader
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_polyinstantiation_enabled # promote to variable
      set_fact:
        var_polyinstantiation_enabled: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean polyinstantiation_enabled accordingly
      seboolean:
        name: polyinstantiation_enabled
        state: "{{ var_polyinstantiation_enabled }}"
        persistent: yes
      tags:
        - sebool_polyinstantiation_enabled
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_secure_mode_insmod # promote to variable
      set_fact:
        var_secure_mode_insmod: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean secure_mode_insmod accordingly
      seboolean:
        name: secure_mode_insmod
        state: "{{ var_secure_mode_insmod }}"
        persistent: yes
      tags:
        - sebool_secure_mode_insmod
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinuxuser_ping # promote to variable
      set_fact:
        var_selinuxuser_ping: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean selinuxuser_ping accordingly
      seboolean:
        name: selinuxuser_ping
        state: "{{ var_selinuxuser_ping }}"
        persistent: yes
      tags:
        - sebool_selinuxuser_ping
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_secure_mode_policyload # promote to variable
      set_fact:
        var_secure_mode_policyload: !!str |-
            false
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean secure_mode_policyload accordingly
      seboolean:
        name: secure_mode_policyload
        state: "{{ var_secure_mode_policyload }}"
        persistent: yes
      tags:
        - sebool_secure_mode_policyload
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_secadm_exec_content # promote to variable
      set_fact:
        var_secadm_exec_content: !!str |-
            true
      tags:
        - always
    
    - name: Ensure libsemanage-python installed
      package:
        name: libsemanage-python
        state: latest
    
    - name: Set SELinux boolean secadm_exec_content accordingly
      seboolean:
        name: secadm_exec_content
        state: "{{ var_secadm_exec_content }}"
        persistent: yes
      tags:
        - sebool_secadm_exec_content
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-TBD
        - DISA-STIG-RHEL-07-TBD
    
    - name: XCCDF Value var_selinux_policy_name # promote to variable
      set_fact:
        var_selinux_policy_name: !!str |-
            targeted
      tags:
        - always
    
    - name: "Configure SELinux Policy"
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: '^SELINUXTYPE='
        line: "SELINUXTYPE={{ var_selinux_policy_name }}"
        create: yes
      tags:
        - selinux_policytype
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)
        - NIST-800-53-AC-3(4)
        - NIST-800-53-AC-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9
        - NIST-800-53-SI-6(a)
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - DISA-STIG-RHEL-07-020220
    
    - name: XCCDF Value var_selinux_state # promote to variable
      set_fact:
        var_selinux_state: !!str |-
            enforcing
      tags:
        - always
    
    - name: "Ensure SELinux State is Enforcing"
      lineinfile:
        path: /etc/sysconfig/selinux
        regexp: '^SELINUX='
        line: "SELINUX={{ var_selinux_state }}"
        create: yes
      tags:
        - selinux_state
        - high_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-3
        - NIST-800-53-AC-3(3)
        - NIST-800-53-AC-3(4)
        - NIST-800-53-AC-4
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9
        - NIST-800-53-SI-6(a)
        - NIST-800-171-3.1.2
        - NIST-800-171-3.7.2
        - DISA-STIG-RHEL-07-020210
    
    - name: "Restrict Serial Port Root Logins"
      lineinfile:
        dest: /etc/securetty
        regexp: 'ttyS[0-9]'
        state: absent
      tags:
        - restrict_serial_port_logins
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-6(2)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
    
    - name: "Direct root Logins Not Allowed"
      shell: echo > /etc/securetty
      tags:
        - no_direct_root_logins
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-2(1)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.6
    
    - name: "Restrict Virtual Console Root Logins"
      lineinfile:
        dest: /etc/securetty
        regexp: '^vc'
        state: absent
      tags:
        - securetty_root_login_console_only
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-6(2)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
    
    - name: XCCDF Value var_account_disable_post_pw_expiration # promote to variable
      set_fact:
        var_account_disable_post_pw_expiration: !!str |-
            35
      tags:
        - always
    
    - name: Set Account Expiration Following Inactivity
      lineinfile:
        create: yes
        dest: /etc/default/useradd
        regexp: ^INACTIVE
        line: "INACTIVE={{ var_account_disable_post_pw_expiration }}"
      tags:
        - account_disable_post_pw_expiration
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(2)
        - NIST-800-53-AC-2(3)
        - NIST-800-53-IA-4(e)
        - NIST-800-171-3.5.6
        - PCI-DSS-Req-8.1.4
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010310
    
    - name: XCCDF Value var_accounts_password_minlen_login_defs # promote to variable
      set_fact:
        var_accounts_password_minlen_login_defs: !!str |-
            6
      tags:
        - always
    
    - name: "Set Password Minimum Length in login.defs"
      lineinfile:
        dest: /etc/login.defs
        regexp: "^PASS_MIN_LEN *[0-9]*"
        state: present
        line: "PASS_MIN_LEN        {{ var_accounts_password_minlen_login_defs }}"
      tags:
        - accounts_password_minlen_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-171-3.5.7
        - CJIS-5.6.2.1
    
    - name: XCCDF Value var_accounts_password_warn_age_login_defs # promote to variable
      set_fact:
        var_accounts_password_warn_age_login_defs: !!str |-
            7
      tags:
        - always
    
    - name: "Set Password Warning Age"
      lineinfile:
        dest: /etc/login.defs
        regexp: "^PASS_WARN_AGE *[0-9]*"
        state: present
        line: "PASS_WARN_AGE        {{ var_accounts_password_warn_age_login_defs }}"
      tags:
        - accounts_password_warn_age_login_defs
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(2)
        - NIST-800-53-IA-5(f)
        - NIST-800-171-3.5.8
    
    - name: XCCDF Value var_accounts_minimum_age_login_defs # promote to variable
      set_fact:
        var_accounts_minimum_age_login_defs: !!str |-
            7
      tags:
        - always
    
    - name: Set Password Minimum Age
      lineinfile:
          create: yes
          dest: /etc/login.defs
          regexp: ^#?PASS_MIN_DAYS
          line: "PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}"
      tags:
        - accounts_minimum_age_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-171-3.5.8
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010230
    
    - name: XCCDF Value var_accounts_maximum_age_login_defs # promote to variable
      set_fact:
        var_accounts_maximum_age_login_defs: !!str |-
            60
      tags:
        - always
    
    - name: Set Password Maximum Age
      lineinfile:
        create: yes
        dest: /etc/login.defs
        regexp: ^#?PASS_MAX_DAYS
        line: "PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}"
      tags:
        - accounts_maximum_age_login_defs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(g)
        - NIST-800-53-IA-5(1)(d)
        - NIST-800-171-3.5.6
        - PCI-DSS-Req-8.2.4
        - CJIS-5.6.2.1
        - DISA-STIG-RHEL-07-010250
    
    - name: "Prevent Log In to Accounts With Empty Password - system-auth"
      replace:
        dest: /etc/pam.d/system-auth
        follow: yes
        regexp: 'nullok'
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-6
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - PCI-DSS-Req-8.2.3
        - CJIS-5.5.2
        - DISA-STIG-RHEL-07-010290
    
    - name: "Prevent Log In to Accounts With Empty Password - password-auth"
      replace:
        dest: /etc/pam.d/password-auth
        follow: yes
        regexp: 'nullok'
      tags:
        - no_empty_passwords
        - high_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-6
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-171-3.1.1
        - NIST-800-171-3.1.5
        - PCI-DSS-Req-8.2.3
        - CJIS-5.5.2
        - DISA-STIG-RHEL-07-010290
    
    - name: Set Password Hashing Algorithm in /etc/login.defs
      lineinfile:
          dest: /etc/login.defs
          regexp: ^#?ENCRYPT_METHOD
          line: ENCRYPT_METHOD SHA512
          state: present
      tags:
        - set_password_hashing_algorithm_logindefs
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-7
        - NIST-800-171-3.13.11
        - PCI-DSS-Req-8.2.1
        - CJIS-5.6.2.2
        - DISA-STIG-RHEL-07-010210
    
    - name: Set Password Hashing Algorithm in /etc/libuser.conf
      lineinfile:
        dest: /etc/libuser.conf
        insertafter: "^.default]"
        regexp: ^#?crypt_style
        line: crypt_style = sha512
        state: present
      tags:
        - set_password_hashing_algorithm_libuserconf
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(c)
        - NIST-800-53-IA-7
        - NIST-800-171-3.13.11
        - PCI-DSS-Req-8.2.1
        - CJIS-5.6.2.2
        - DISA-STIG-RHEL-07-010220
    
    - name: XCCDF Value var_accounts_passwords_pam_faillock_deny # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_deny: !!str |-
            3
      tags:
        - always
    - name: XCCDF Value var_accounts_passwords_pam_faillock_unlock_time # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_unlock_time: !!str |-
            never
      tags:
        - always
    - name: XCCDF Value var_accounts_passwords_pam_faillock_fail_interval # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_fail_interval: !!str |-
            900
      tags:
        - always
    
    - name: set auth pam_faillock before pam_unix.so
      pamd:
        name: system-auth
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: 'preauth
            silent
            even_deny_root
            deny: {{ var_accounts_passwords_pam_faillock_deny }}
            unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
        state: before
      tags:
        - accounts_passwords_pam_faillock_deny_root
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-7(b)
        - DISA-STIG-RHEL-07-010330
    
    - name: set auth pam_faillock after pam_unix.so
      pamd:
        name: system-auth
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: 'preauth
            silent
            even_deny_root
            deny: {{ var_accounts_passwords_pam_faillock_deny }}
            unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
        state: after
      tags:
        - accounts_passwords_pam_faillock_deny_root
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-7(b)
        - DISA-STIG-RHEL-07-010330
    
    - name: set account pam_faillock before pam_unix.so
      pamd:
        name: system-auth
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      tags:
        - accounts_passwords_pam_faillock_deny_root
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-7(b)
        - DISA-STIG-RHEL-07-010330
    
    - name: XCCDF Value var_password_pam_unix_remember # promote to variable
      set_fact:
        var_password_pam_unix_remember: !!str |-
            5
      tags:
        - always
    
    - name: "Do not allow users to reuse recent passwords - system-auth (change)"
      replace:
        dest: /etc/pam.d/system-auth
        follow: yes
        regexp: '^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$'
        replace: '\g<1>{{ var_password_pam_unix_remember }}\g<3>'
      tags:
        - accounts_password_pam_unix_remember
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-171-3.5.8
        - PCI-DSS-Req-8.2.5
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010270
    
    - name: "Do not allow users to reuse recent passwords - system-auth (add)"
      replace:
        dest: /etc/pam.d/system-auth
        follow: yes
        regexp: '^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$'
        replace: '\g<0> remember={{ var_password_pam_unix_remember }}'
      tags:
        - accounts_password_pam_unix_remember
        - medium_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-IA-5(f)
        - NIST-800-53-IA-5(1)(e)
        - NIST-800-171-3.5.8
        - PCI-DSS-Req-8.2.5
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010270
    
    - name: XCCDF Value var_accounts_passwords_pam_faillock_deny # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_deny: !!str |-
            3
      tags:
        - always
    - name: XCCDF Value var_accounts_passwords_pam_faillock_unlock_time # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_unlock_time: !!str |-
            never
      tags:
        - always
    - name: XCCDF Value var_accounts_passwords_pam_faillock_fail_interval # promote to variable
      set_fact:
        var_accounts_passwords_pam_faillock_fail_interval: !!str |-
            900
      tags:
        - always
    
    - name: set auth pam_faillock before pam_unix.so
      pamd:
        name: system-auth
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: required
        new_module_path: pam_faillock.so
        module_arguments: 'preauth
            silent
            deny: {{ var_accounts_passwords_pam_faillock_deny }}
            unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
        state: before
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-07-010320
    
    - name: set auth pam_faillock after pam_unix.so
      pamd:
        name: system-auth
        type: auth
        control: sufficient
        module_path: pam_unix.so
        new_type: auth
        new_control: '[default=die]'
        new_module_path: pam_faillock.so
        module_arguments: 'preauth
            silent
            deny: {{ var_accounts_passwords_pam_faillock_deny }}
            unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}
            fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
        state: after
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-07-010320
    
    - name: set account pam_faillock before pam_unix.so
      pamd:
        name: system-auth
        type: account
        control: required
        module_path: pam_unix.so
        new_type: account
        new_control: required
        new_module_path: pam_faillock.so
        state: before
      tags:
        - accounts_passwords_pam_faillock_deny
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-7(b)
        - NIST-800-171-3.1.8
        - PCI-DSS-Req-8.1.6
        - CJIS-5.5.3
        - DISA-STIG-RHEL-07-010320
    
    - name: XCCDF Value var_password_pam_minlen # promote to variable
      set_fact:
        var_password_pam_minlen: !!str |-
            15
      tags:
        - always
    
    - name: Ensure PAM variable minlen is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*minlen'
        line: "minlen = {{ var_password_pam_minlen }}"
    
      tags:
        - accounts_password_pam_minlen
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010280
    
    - name: XCCDF Value var_password_pam_maxclassrepeat # promote to variable
      set_fact:
        var_password_pam_maxclassrepeat: !!str |-
            4
      tags:
        - always
    
    - name: Ensure PAM variable maxclassrepeat is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*maxclassrepeat'
        line: "maxclassrepeat = {{ var_password_pam_maxclassrepeat }}"
    
      tags:
        - accounts_password_pam_maxclassrepeat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5
        - NIST-800-53-IA-5(c)
        - DISA-STIG-RHEL-07-010190
    
    - name: XCCDF Value var_password_pam_dcredit # promote to variable
      set_fact:
        var_password_pam_dcredit: !!str |-
            -1
      tags:
        - always
    
    - name: Ensure PAM variable dcredit is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*dcredit'
        line: "dcredit = {{ var_password_pam_dcredit }}"
    
      tags:
        - accounts_password_pam_dcredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(1)(a)
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-194
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010140
    
    - name: XCCDF Value var_password_pam_minclass # promote to variable
      set_fact:
        var_password_pam_minclass: !!str |-
            4
      tags:
        - always
    
    - name: Ensure PAM variable minclass is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*minclass'
        line: "minclass = {{ var_password_pam_minclass }}"
    
      tags:
        - accounts_password_pam_minclass
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5
        - DISA-STIG-RHEL-07-010170
    
    - name: XCCDF Value var_password_pam_difok # promote to variable
      set_fact:
        var_password_pam_difok: !!str |-
            8
      tags:
        - always
    
    - name: Ensure PAM variable difok is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*difok'
        line: "difok = {{ var_password_pam_difok }}"
    
      tags:
        - accounts_password_pam_difok
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(b)
        - CJIS-5.6.2.1.1
        - DISA-STIG-RHEL-07-010160
    
    - name: XCCDF Value var_password_pam_ocredit # promote to variable
      set_fact:
        var_password_pam_ocredit: !!str |-
            -1
      tags:
        - always
    
    - name: Ensure PAM variable ocredit is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*ocredit'
        line: "ocredit = {{ var_password_pam_ocredit }}"
    
      tags:
        - accounts_password_pam_ocredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - DISA-STIG-RHEL-07-010150
    
    - name: XCCDF Value var_password_pam_lcredit # promote to variable
      set_fact:
        var_password_pam_lcredit: !!str |-
            -1
      tags:
        - always
    
    - name: Ensure PAM variable lcredit is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*lcredit'
        line: "lcredit = {{ var_password_pam_lcredit }}"
    
      tags:
        - accounts_password_pam_lcredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010130
    
    - name: XCCDF Value var_password_pam_ucredit # promote to variable
      set_fact:
        var_password_pam_ucredit: !!str |-
            -1
      tags:
        - always
    
    - name: Ensure PAM variable ucredit is set accordingly
    
      lineinfile:
        create: yes
        dest: "/etc/security/pwquality.conf"
        regexp: '^#?\s*ucredit'
        line: "ucredit = {{ var_password_pam_ucredit }}"
    
      tags:
        - accounts_password_pam_ucredit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-IA-5(b)
        - NIST-800-53-IA-5(c)
        - NIST-800-53-IA-5(1)(a)
        - PCI-DSS-Req-8.2.3
        - DISA-STIG-RHEL-07-010120
    
    - name: XCCDF Value var_password_pam_retry # promote to variable
      set_fact:
        var_password_pam_retry: !!str |-
            3
      tags:
        - always
    
    - name: "Set Password Retry Prompts Permitted Per-Session - system-auth (change)"
      replace:
        dest: /etc/pam.d/system-auth
        follow: yes
        regexp: '(^.*\spam_pwquality.so\s.*retry\s*=\s*)(\S+)(.*$)'
        replace: '\g<1>{{ var_password_pam_retry }}\g<3>'
      tags:
        - accounts_password_pam_retry
        - unknown_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-6(b)
        - NIST-800-53-IA-5(c)
        - CJIS-5.5.3
        - DISA-STIG-RHEL-07-010119
    
    - name: "Set Password Retry Prompts Permitted Per-Session - system-auth (add)"
      replace:
        dest: /etc/pam.d/system-auth
        follow: yes
        regexp: '^.*\spam_pwquality.so\s(?!.*retry\s*=\s*).*$'
        replace: '\g<0> retry={{ var_password_pam_retry }}'
      tags:
        - accounts_password_pam_retry
        - unknown_severity
        - configure_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-6(b)
        - NIST-800-53-IA-5(c)
        - CJIS-5.5.3
        - DISA-STIG-RHEL-07-010119
    
    - name: Ensure screen is installed
      package:
        name: "{{item}}"
        state: present
      with_items:
        - screen
      tags:
        - package_screen_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - DISA-STIG-RHEL-07-010090
    
    - name: Disable service debug-shell
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - debug-shell
      tags:
        - service_debug-shell_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-171-3.4.5
    
    
    - name: Disable socket of service debug-shell if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - debug-shell.socket
      tags:
        - service_debug-shell_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-171-3.4.5
    
    - name: "Enable GNOME3 Login Warning Banner"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/login-screen"
        option: banner-message-enable
        value: "true"
        create: yes
      tags:
        - dconf_gnome_banner_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-171-3.1.9
        - DISA-STIG-RHEL-07-010030
    
    - name: "Prevent user modification of GNOME banner-message-enabled"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/login-screen/banner-message-enable'
        line: '/org/gnome/login-screen/banner-message-enable'
        create: yes
      tags:
        - dconf_gnome_banner_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)(1)
        - NIST-800-53-AC-8(c)(2)
        - NIST-800-53-AC-8(c)(3)
        - NIST-800-171-3.1.9
        - DISA-STIG-RHEL-07-010030
    
    - name: XCCDF Value login_banner_text # promote to variable
      set_fact:
        login_banner_text: !!str |-
            --[\s\n]+WARNING[\s\n]+--[\s\n]*This[\s\n]+system[\s\n]+is[\s\n]+for[\s\n]+the[\s\n]+use[\s\n]+of[\s\n]+authorized[\s\n]+users[\s\n]+only.[\s\n]+Individuals[\s\n]*using[\s\n]+this[\s\n]+computer[\s\n]+system[\s\n]+without[\s\n]+authority[\s\n]+or[\s\n]+in[\s\n]+excess[\s\n]+of[\s\n]+their[\s\n]*authority[\s\n]+are[\s\n]+subject[\s\n]+to[\s\n]+having[\s\n]+all[\s\n]+their[\s\n]+activities[\s\n]+on[\s\n]+this[\s\n]+system[\s\n]*monitored[\s\n]+and[\s\n]+recorded[\s\n]+by[\s\n]+system[\s\n]+personnel.[\s\n]+Anyone[\s\n]+using[\s\n]+this[\s\n]*system[\s\n]+expressly[\s\n]+consents[\s\n]+to[\s\n]+such[\s\n]+monitoring[\s\n]+and[\s\n]+is[\s\n]+advised[\s\n]+that[\s\n]*if[\s\n]+such[\s\n]+monitoring[\s\n]+reveals[\s\n]+possible[\s\n]+evidence[\s\n]+of[\s\n]+criminal[\s\n]+activity[\s\n]*system[\s\n]+personal[\s\n]+may[\s\n]+provide[\s\n]+the[\s\n]+evidence[\s\n]+of[\s\n]+such[\s\n]+monitoring[\s\n]+to[\s\n]+law[\s\n]*enforcement[\s\n]+officials.
      tags:
        - always
    
    - name: "Set the GNOME3 Login Warning Banner Text"
      file:
        path: "/etc/dconf/db/{{ item }}"
        owner: root
        group: root
        mode: 0755
        state: directory
      with_items:
        - gdm.d
        - gdm.d/locks
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9
        - DISA-STIG-RHEL-07-010040
    
    - name: "Set the GNOME3 Login Warning Banner Text"
      file:
        path: "/etc/dconf/db/gdm.d/{{ item }}"
        owner: root
        group: root
        mode: 0644
        state: touch
      with_items:
        - 00-security-settings
        - locks/00-security-settings-lock
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9
        - DISA-STIG-RHEL-07-010040
    
    - name: "Set the GNOME3 Login Warning Banner Text"
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: banner-message-text
        value: string '{{ login_banner_text }}'
        create: yes
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9
        - DISA-STIG-RHEL-07-010040
    
    - name: "Prevent user modification of the GNOME3 Login Warning Banner Text"
      lineinfile:
        path: '/etc/dconf/db/gdm.d/locks/00-security-settings-lock'
        regexp: '^org/gnome/login-screen/banner-message-text$'
        line: 'org/gnome/login-screen/banner-message-text'
        create: yes
        state: present
      tags:
        - dconf_gnome_login_banner_text
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-8(a)
        - NIST-800-53-AC-8(b)
        - NIST-800-53-AC-8(c)
        - NIST-800-171-3.1.9
        - DISA-STIG-RHEL-07-010040
    
    - name: XCCDF Value var_accounts_user_umask # promote to variable
      set_fact:
        var_accounts_user_umask: !!str |-
            077
      tags:
        - always
    
    - name: Ensure the Default UMASK is Set Correctly
      lineinfile:
        create: yes
        dest: /etc/login.defs
        regexp: ^UMASK
        line: "UMASK {{ var_accounts_user_umask }}"
      tags:
        - accounts_umask_etc_login_defs
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(b)
        - NIST-800-53-SA-8
        - DISA-STIG-RHEL-07-020240
    
    - name: XCCDF Value var_accounts_tmout # promote to variable
      set_fact:
        var_accounts_tmout: !!str |-
            600
      tags:
        - always
    
    - name: Set Interactive Session Timeout
      lineinfile:
          create: yes
          dest: /etc/profile
          regexp: ^#?TMOUT
          line: "TMOUT={{ var_accounts_tmout }}"
      tags:
        - accounts_tmout
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-12
        - NIST-800-53-SC-10
        - NIST-800-171-3.1.11
        - DISA-STIG-RHEL-07-040160
    
    - name: XCCDF Value var_accounts_fail_delay # promote to variable
      set_fact:
        var_accounts_fail_delay: !!str |-
            4
      tags:
        - always
    
    - name: Set accounts logon fail delay
      lineinfile:
        dest: /etc/login.defs
        regexp: ^FAIL_DELAY
        line: "FAIL_DELAY {{ var_accounts_fail_delay }}"
      tags:
        - accounts_logon_fail_delay
        - unknown_severity
        - NIST-800-53-CM-6(b)
        - DISA-STIG-RHEL-07-010430
    
    - name: XCCDF Value var_accounts_max_concurrent_login_sessions # promote to variable
      set_fact:
        var_accounts_max_concurrent_login_sessions: !!str |-
            10
      tags:
        - always
    
    - name: "Limit the Number of Concurrent Login Sessions Allowed Per User"
      lineinfile:
        state: present
        dest: /etc/security/limits.conf
        insertbefore: "^# End of file"
        regexp: "^#?\\*.*maxlogins"
        line: "*           hard    maxlogins     {{ var_accounts_max_concurrent_login_sessions }}"
      tags:
        - accounts_max_concurrent_login_sessions
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-10
        - CJIS-5.5.2.2
        - DISA-STIG-RHEL-07-040000
    
    - name: Ensure kernel module 'usb-storage' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - usb-storage
      tags:
        - kernel_module_usb-storage_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3
        - NIST-800-171-3.1.21
        - DISA-STIG-RHEL-07-020100
    
    - name: Ensure kernel module 'freevxfs' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - freevxfs
      tags:
        - kernel_module_freevxfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Disable service autofs
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: service_result
      failed_when: "service_result is failed and ('Could not find the requested service' not in service_result.msg)"
      with_items:
        - autofs
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3
        - NIST-800-171-3.4.6
        - DISA-STIG-RHEL-07-020110
    
    
    - name: Disable socket of service autofs if applicable
      service:
        name: "{{item}}"
        enabled: "no"
        state: "stopped"
      register: socket_result
      failed_when: "socket_result is failed and ('Could not find the requested service' not in socket_result.msg)"
      with_items:
        - autofs.socket
      tags:
        - service_autofs_disabled
        - medium_severity
        - disable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-IA-3
        - NIST-800-171-3.4.6
        - DISA-STIG-RHEL-07-020110
    
    - name: Ensure kernel module 'squashfs' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - squashfs
      tags:
        - kernel_module_squashfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'hfsplus' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - hfsplus
      tags:
        - kernel_module_hfsplus_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'jffs2' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - jffs2
      tags:
        - kernel_module_jffs2_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'hfs' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - hfs
      tags:
        - kernel_module_hfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure kernel module 'cramfs' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{item}}.conf"
        regexp: '{{item}}'
        line: "install {{item}} /bin/true"
      with_items:
        - cramfs
      tags:
        - kernel_module_cramfs_disabled
        - low_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
        - NIST-800-171-3.4.6
    
    - name: Ensure sysctl fs.suid_dumpable is set to 0
      sysctl:
        name: fs.suid_dumpable
        value: 0
        state: present
        reload: yes
      tags:
        - sysctl_fs_suid_dumpable
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-SI-11
    
    - name: Ensure sysctl kernel.randomize_va_space is set to 2
      sysctl:
        name: kernel.randomize_va_space
        value: 2
        state: present
        reload: yes
      tags:
        - sysctl_kernel_randomize_va_space
        - medium_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-SC-30(2)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-040201
    
    - name: Ensure sysctl kernel.dmesg_restrict is set to 1
      sysctl:
        name: kernel.dmesg_restrict
        value: 1
        state: present
        reload: yes
      tags:
        - sysctl_kernel_dmesg_restrict
        - unknown_severity
        - disable_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-SI-11
        - NIST-800-171-3.1.5
    
    - name: XCCDF Value var_removable_partition # promote to variable
      set_fact:
        var_removable_partition: !!str |-
            /dev/cdrom
      tags:
        - always
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' {{ var_removable_partition }} ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_nosuid_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021010
    
    - name: get back device previous mount option
      shell: mount | grep ' {{ var_removable_partition }} ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_nosuid_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021010
    
    - name: get back device fstype
      shell: mount | grep ' {{ var_removable_partition }} ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_nosuid_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021010
    
    - name: Ensure permission nosuid are set on var_removable_partition
      mount:
        path: "{{ var_removable_partition }}"
        src: "{{device_name.stdout}}"
        opts: "{{ device_cur_mountoption.stdout }},nosuid"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_nosuid_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-6
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
        - DISA-STIG-RHEL-07-021010
    
    - name: XCCDF Value var_removable_partition # promote to variable
      set_fact:
        var_removable_partition: !!str |-
            /dev/cdrom
      tags:
        - always
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' {{ var_removable_partition }} ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_nodev_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device previous mount option
      shell: mount | grep ' {{ var_removable_partition }} ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_nodev_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device fstype
      shell: mount | grep ' {{ var_removable_partition }} ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_nodev_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: Ensure permission nodev are set on var_removable_partition
      mount:
        path: "{{ var_removable_partition }}"
        src: "{{device_name.stdout}}"
        opts: "{{ device_cur_mountoption.stdout }},nodev"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_nodev_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: XCCDF Value var_removable_partition # promote to variable
      set_fact:
        var_removable_partition: !!str |-
            /dev/cdrom
      tags:
        - always
    
    - name: get back device associated to mountpoint
      shell: mount | grep ' {{ var_removable_partition }} ' |cut -d ' ' -f 1
      register: device_name
      check_mode: no
      tags:
        - mount_option_noexec_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device previous mount option
      shell: mount | grep ' {{ var_removable_partition }} ' | sed -re 's:.*\((.*)\):\1:'
      register: device_cur_mountoption
      check_mode: no
      tags:
        - mount_option_noexec_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: get back device fstype
      shell: mount | grep ' {{ var_removable_partition }} ' | cut -d ' ' -f 5
      register: device_fstype
      check_mode: no
      tags:
        - mount_option_noexec_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: Ensure permission noexec are set on var_removable_partition
      mount:
        path: "{{ var_removable_partition }}"
        src: "{{device_name.stdout}}"
        opts: "{{ device_cur_mountoption.stdout }},noexec"
        state: "mounted"
        fstype: "{{device_fstype.stdout}}"
      tags:
        - mount_option_noexec_removable_partitions
        - unknown_severity
        - configure_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-53-CM-7
        - NIST-800-53-MP-2
    
    - name: XCCDF Value var_auditd_space_left_action # promote to variable
      set_fact:
        var_auditd_space_left_action: !!str |-
            email
      tags:
        - always
    
    - name: Configure auditd space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: "space_left_action = {{ var_auditd_space_left_action }}"
        regexp: ^space_left_action*
      #notify: reload auditd
      tags:
        - auditd_data_retention_space_left_action
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-4
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(b)
        - NIST-800-53-IR-5
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1
    
    - name: Configure auditd Flush Priority
      lineinfile:
        dest: /etc/audit/auditd.conf
        regexp: '.*flush.*'
        line: flush = data
      #notify: reload auditd
      tags:
        - auditd_data_retention_flush
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-9
        - NIST-800-53-AU-12(1)
        - NIST-800-171-3.3.1
    
    - name: XCCDF Value var_auditd_max_log_file # promote to variable
      set_fact:
        var_auditd_max_log_file: !!str |-
            6
      tags:
        - always
    
    - name: Configure auditd Max Log File Size
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: "max_log_file {{ var_auditd_max_log_file }}"
        state: present
      #notify: reload auditd
      tags:
        - auditd_data_retention_max_log_file
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-11
        - NIST-800-53-IR-5
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1
    
    - name: XCCDF Value var_auditd_action_mail_acct # promote to variable
      set_fact:
        var_auditd_action_mail_acct: !!str |-
            root
      tags:
        - always
    
    - name: Configure auditd mail_acct Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: "action_mail_acct = {{ var_auditd_action_mail_acct }}"
        state: present
      #notify: reload auditd
      tags:
        - auditd_data_retention_action_mail_acct
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-4
        - NIST-800-53-AU-5(1)
        - NIST-800-53-AU-5(a)
        - NIST-800-53-IR-5
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7.a
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030350
    
    - name: XCCDF Value var_auditd_admin_space_left_action # promote to variable
      set_fact:
        var_auditd_admin_space_left_action: !!str |-
            single
      tags:
        - always
    
    - name: Configure auditd admin_space_left Action on Low Disk Space
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: "admin_space_left_action = {{ var_auditd_admin_space_left_action }}"
        regexp: "^admin_space_left_action*"
      #notify: reload auditd
      tags:
        - auditd_data_retention_admin_space_left_action
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-4
        - NIST-800-53-AU-5(b)
        - NIST-800-53-IR-5
        - NIST-800-171-3.3.1
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030340
    
    - name: XCCDF Value var_auditd_max_log_file_action # promote to variable
      set_fact:
        var_auditd_max_log_file_action: !!str |-
            rotate
      tags:
        - always
    
    - name: Configure auditd max_log_file_action Upon Reaching Maximum Log Size
      lineinfile:
        dest: /etc/audit/auditd.conf
        line: "max_log_file_action {{ var_auditd_max_log_file_action }}"
        state: present
      #notify: reload auditd
      tags:
        - auditd_data_retention_max_log_file_action
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-4
        - NIST-800-53-AU-11
        - NIST-800-53-IR-5
        - PCI-DSS-Req-10.7
        - CJIS-5.4.1.1
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lastlog tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k logins$"
        patterns: "*.rules"
      register: find_lastlog
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when: find_lastlog.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lastlog.files | map(attribute='path') | list | first }}"
      when: find_lastlog.matched > 0
    
    - name: Inserts/replaces the lastlog rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /var/log/lastlog -p wa -k logins"
        create: yes
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030620
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lastlog rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /var/log/lastlog -p wa -k logins"
      tags:
        - audit_rules_login_events_lastlog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030620
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit faillock tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k logins$"
        patterns: "*.rules"
      register: find_faillock
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when: find_faillock.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_faillock.files | map(attribute='path') | list | first }}"
      when: find_faillock.matched > 0
    
    - name: Inserts/replaces the faillock rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /var/run/faillock -p wa -k logins"
        create: yes
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030610
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the faillock rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /var/run/faillock -p wa -k logins"
      tags:
        - audit_rules_login_events_faillock
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030610
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit tallylog tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k logins$"
        patterns: "*.rules"
      register: find_tallylog
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/logins.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/logins.rules
      when: find_tallylog.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_tallylog.files | map(attribute='path') | list | first }}"
      when: find_tallylog.matched > 0
    
    - name: Inserts/replaces the tallylog rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /var/log/tallylog -p wa -k logins"
        create: yes
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030600
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the tallylog rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /var/log/tallylog -p wa -k logins"
      tags:
        - audit_rules_login_events_tallylog
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.3
        - DISA-STIG-RHEL-07-030600
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchown
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchown.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchown.files | map(attribute='path') | list | first }}"
      when: find_fchown.matched > 0
    
    - name: Inserts/replaces the fchown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    
    - name: Inserts/replaces the fchown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    
    - name: Inserts/replaces the fchown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030380
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit setxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_setxattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_setxattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_setxattr.files | map(attribute='path') | list | first }}"
      when: find_setxattr.matched > 0
    
    - name: Inserts/replaces the setxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_setxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    
    - name: Inserts/replaces the setxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_setxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the setxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_setxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    
    - name: Inserts/replaces the setxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S setxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_setxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030440
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit chown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_chown
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chown.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chown.files | map(attribute='path') | list | first }}"
      when: find_chown.matched > 0
    
    - name: Inserts/replaces the chown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_chown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    
    - name: Inserts/replaces the chown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the chown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_chown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    
    - name: Inserts/replaces the chown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S chown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030370
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lsetxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lsetxattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lsetxattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lsetxattr.files | map(attribute='path') | list | first }}"
      when: find_lsetxattr.matched > 0
    
    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    
    - name: Inserts/replaces the lsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    
    - name: Inserts/replaces the lsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030460
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lchown tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lchown
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lchown.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lchown.files | map(attribute='path') | list | first }}"
      when: find_lchown.matched > 0
    
    - name: Inserts/replaces the lchown rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    
    - name: Inserts/replaces the lchown rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lchown rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    
    - name: Inserts/replaces the lchown rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lchown -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lchown
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030390
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit chmod tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_chmod
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chmod.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chmod.files | map(attribute='path') | list | first }}"
      when: find_chmod.matched > 0
    
    - name: Inserts/replaces the chmod rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_chmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    
    - name: Inserts/replaces the chmod rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the chmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_chmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    
    - name: Inserts/replaces the chmod rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S chmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_chmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030410
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit removexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_removexattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_removexattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_removexattr.files | map(attribute='path') | list | first }}"
      when: find_removexattr.matched > 0
    
    - name: Inserts/replaces the removexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    
    - name: Inserts/replaces the removexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the removexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    
    - name: Inserts/replaces the removexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S removexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_removexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030470
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fremovexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fremovexattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fremovexattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fremovexattr.files | map(attribute='path') | list | first }}"
      when: find_fremovexattr.matched > 0
    
    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    
    - name: Inserts/replaces the fremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    
    - name: Inserts/replaces the fremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030480
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchownat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchownat
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchownat.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchownat.files | map(attribute='path') | list | first }}"
      when: find_fchownat.matched > 0
    
    - name: Inserts/replaces the fchownat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchownat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    
    - name: Inserts/replaces the fchownat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchownat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchownat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchownat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    
    - name: Inserts/replaces the fchownat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchownat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchownat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030400
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchmod tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchmod
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchmod.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchmod.files | map(attribute='path') | list | first }}"
      when: find_fchmod.matched > 0
    
    - name: Inserts/replaces the fchmod rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    
    - name: Inserts/replaces the fchmod rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchmod rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    
    - name: Inserts/replaces the fchmod rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchmod -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmod
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030420
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit lremovexattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_lremovexattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_lremovexattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_lremovexattr.files | map(attribute='path') | list | first }}"
      when: find_lremovexattr.matched > 0
    
    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    
    - name: Inserts/replaces the lremovexattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the lremovexattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    
    - name: Inserts/replaces the lremovexattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S lremovexattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_lremovexattr
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030490
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fsetxattr tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fsetxattr
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fsetxattr.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fsetxattr.files | map(attribute='path') | list | first }}"
      when: find_fsetxattr.matched > 0
    
    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    
    - name: Inserts/replaces the fsetxattr rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fsetxattr rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    
    - name: Inserts/replaces the fsetxattr rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fsetxattr -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fsetxattr
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030450
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit fchmodat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_fchmodat
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_fchmodat.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_fchmodat.files | map(attribute='path') | list | first }}"
      when: find_fchmodat.matched > 0
    
    - name: Inserts/replaces the fchmodat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      tags:
        - audit_rules_dac_modification_fchmodat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    
    - name: Inserts/replaces the fchmodat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
        create: yes
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmodat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the fchmodat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      tags:
        - audit_rules_dac_modification_fchmodat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    
    - name: Inserts/replaces the fchmodat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S fchmodat -F auid>=1000 -F auid!=4294967295 -F key=perm_mod"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_dac_modification_fchmodat
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.5.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030430
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/setsebool.*$"
        patterns: "*.rules"
      register: find_setsebool
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_setsebool.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_setsebool.files | map(attribute='path') | list | first }}"
      when: find_setsebool.matched > 0
    
    - name: Inserts/replaces the setsebool rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030570
       
    # Inserts/replaces the setsebool rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the setsebool rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/setsebool -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_setsebool
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030570
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/semanage.*$"
        patterns: "*.rules"
      register: find_semanage
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_semanage.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_semanage.files | map(attribute='path') | list | first }}"
      when: find_semanage.matched > 0
    
    - name: Inserts/replaces the semanage rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030560
       
    # Inserts/replaces the semanage rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the semanage rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/semanage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_semanage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030560
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/chcon.*$"
        patterns: "*.rules"
      register: find_chcon
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chcon.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chcon.files | map(attribute='path') | list | first }}"
      when: find_chcon.matched > 0
    
    - name: Inserts/replaces the chcon rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030580
       
    # Inserts/replaces the chcon rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the chcon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_chcon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030580
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/restorecon.*$"
        patterns: "*.rules"
      register: find_restorecon
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_restorecon.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_restorecon.files | map(attribute='path') | list | first }}"
      when: find_restorecon.matched > 0
    
    - name: Inserts/replaces the restorecon rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
       
    # Inserts/replaces the restorecon rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the restorecon rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/restorecon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_execution_restorecon
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/passwd.*$"
        patterns: "*.rules"
      register: find_passwd
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_passwd.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_passwd.files | map(attribute='path') | list | first }}"
      when: find_passwd.matched > 0
    
    - name: Inserts/replaces the passwd rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030630
       
    # Inserts/replaces the passwd rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the passwd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/passwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030630
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/sudo.*$"
        patterns: "*.rules"
      register: find_sudo
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_sudo.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_sudo.files | map(attribute='path') | list | first }}"
      when: find_sudo.matched > 0
    
    - name: Inserts/replaces the sudo rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030690
       
    # Inserts/replaces the sudo rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the sudo rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/sudo -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_sudo
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030690
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/postdrop.*$"
        patterns: "*.rules"
      register: find_postdrop
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_postdrop.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_postdrop.files | map(attribute='path') | list | first }}"
      when: find_postdrop.matched > 0
    
    - name: Inserts/replaces the postdrop rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_postdrop
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030760
       
    # Inserts/replaces the postdrop rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the postdrop rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/postdrop -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_postdrop
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030760
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/chsh.*$"
        patterns: "*.rules"
      register: find_chsh
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chsh.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chsh.files | map(attribute='path') | list | first }}"
      when: find_chsh.matched > 0
    
    - name: Inserts/replaces the chsh rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030720
       
    # Inserts/replaces the chsh rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the chsh rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/chsh -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_chsh
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030720
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/gpasswd.*$"
        patterns: "*.rules"
      register: find_gpasswd
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_gpasswd.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_gpasswd.files | map(attribute='path') | list | first }}"
      when: find_gpasswd.matched > 0
    
    - name: Inserts/replaces the gpasswd rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030650
       
    # Inserts/replaces the gpasswd rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the gpasswd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/gpasswd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_gpasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030650
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/chage.*$"
        patterns: "*.rules"
      register: find_chage
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_chage.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_chage.files | map(attribute='path') | list | first }}"
      when: find_chage.matched > 0
    
    - name: Inserts/replaces the chage rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030660
       
    # Inserts/replaces the chage rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the chage rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/chage -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_chage
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030660
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/userhelper.*$"
        patterns: "*.rules"
      register: find_userhelper
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_userhelper.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_userhelper.files | map(attribute='path') | list | first }}"
      when: find_userhelper.matched > 0
    
    - name: Inserts/replaces the userhelper rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030670
       
    # Inserts/replaces the userhelper rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the userhelper rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/userhelper -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_userhelper
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030670
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/pam_timestamp_check.*$"
        patterns: "*.rules"
      register: find_pam_timestamp_check
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_pam_timestamp_check.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_pam_timestamp_check.files | map(attribute='path') | list | first }}"
      when: find_pam_timestamp_check.matched > 0
    
    - name: Inserts/replaces the pam_timestamp_check rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_pam_timestamp_check
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030810
       
    # Inserts/replaces the pam_timestamp_check rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the pam_timestamp_check rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/pam_timestamp_check -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_pam_timestamp_check
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030810
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/crontab.*$"
        patterns: "*.rules"
      register: find_crontab
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_crontab.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_crontab.files | map(attribute='path') | list | first }}"
      when: find_crontab.matched > 0
    
    - name: Inserts/replaces the crontab rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030800
       
    # Inserts/replaces the crontab rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the crontab rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/crontab -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_crontab
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030800
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/umount.*$"
        patterns: "*.rules"
      register: find_umount
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_umount.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_umount.files | map(attribute='path') | list | first }}"
      when: find_umount.matched > 0
    
    - name: Inserts/replaces the umount rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030750
       
    # Inserts/replaces the umount rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the umount rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/umount -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_umount
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030750
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/unix_chkpwd.*$"
        patterns: "*.rules"
      register: find_unix_chkpwd
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_unix_chkpwd.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_unix_chkpwd.files | map(attribute='path') | list | first }}"
      when: find_unix_chkpwd.matched > 0
    
    - name: Inserts/replaces the unix_chkpwd rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030640
       
    # Inserts/replaces the unix_chkpwd rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the unix_chkpwd rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/unix_chkpwd -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_unix_chkpwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030640
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/libexec/openssh/ssh-keysign.*$"
        patterns: "*.rules"
      register: find_ssh_keysign
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_ssh_keysign.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_ssh_keysign.files | map(attribute='path') | list | first }}"
      when: find_ssh_keysign.matched > 0
    
    - name: Inserts/replaces the ssh_keysign rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030780
       
    # Inserts/replaces the ssh_keysign rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the ssh_keysign rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/libexec/openssh/ssh-keysign -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_ssh_keysign
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030780
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/sudoedit.*$"
        patterns: "*.rules"
      register: find_sudoedit
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_sudoedit.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_sudoedit.files | map(attribute='path') | list | first }}"
      when: find_sudoedit.matched > 0
    
    - name: Inserts/replaces the sudoedit rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030730
       
    # Inserts/replaces the sudoedit rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the sudoedit rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/sudoedit -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_sudoedit
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030730
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/sbin/postqueue.*$"
        patterns: "*.rules"
      register: find_postqueue
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_postqueue.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_postqueue.files | map(attribute='path') | list | first }}"
      when: find_postqueue.matched > 0
    
    - name: Inserts/replaces the postqueue rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_postqueue
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030770
       
    # Inserts/replaces the postqueue rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the postqueue rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/sbin/postqueue -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_postqueue
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030770
    
    
    - name: Search for privileged commands
      shell: "find / -xdev -type f -perm -4000 -o -type f -perm -2000 2>/dev/null | cat"
      check_mode: no
      register: find_result
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path={{ item }} .*$"
        patterns: "*.rules"
      with_items:
        - "{{ find_result.stdout_lines }}"
      register: files_result
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
      
    - name: Overwrites the rule in rules.d
      lineinfile:
        path: "{{ item.1.path }}"
        line: '-a always,exit -F path={{ item.0.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: no
        regexp: "^.*path={{ item.0.item }} .*$"
      with_subelements:
        - "{{ files_result.results }}"
        - files
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
        
    - name: Adds the rule in rules.d
      lineinfile:
        path: /etc/audit/rules.d/privileged.rules
        line: '-a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      with_items:
        - "{{ files_result.results }}"
      when: item.matched == 0
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
      
    # Adds/overwrites the rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path={{ item.item }} -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
        regexp: "^.*path={{ item.item }} .*$"
      with_items:
        - "{{ files_result.results }}"
      tags:
        - audit_rules_privileged_commands
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-2(4)
        - NIST-800-53-AU-6(9)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.2
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030360
    
    
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/su.*$"
        patterns: "*.rules"
      register: find_su
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_su.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_su.files | map(attribute='path') | list | first }}"
      when: find_su.matched > 0
    
    - name: Inserts/replaces the su rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030680
       
    # Inserts/replaces the su rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the su rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/su -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_su
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030680
    
    
    # Inserts/replaces the rule in /etc/audit/rules.d
    
    - name: Search /etc/audit/rules.d for audit rule entries
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "^.*path=/usr/bin/newgrp.*$"
        patterns: "*.rules"
      register: find_newgrp
    
    - name: Use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_newgrp.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_newgrp.files | map(attribute='path') | list | first }}"
      when: find_newgrp.matched > 0
    
    - name: Inserts/replaces the newgrp rule in rules.d
      lineinfile:
        path: "{{ all_files[0] }}"
        line: '-a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030710
       
    # Inserts/replaces the newgrp rule in /etc/audit/audit.rules
    
    - name: Inserts/replaces the newgrp rule in audit.rules
      lineinfile:
        path: /etc/audit/audit.rules
        line: '-a always,exit -F path=/usr/bin/newgrp -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged'
        create: yes
      tags:
        - audit_rules_privileged_commands_newgrp
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3(1)
        - NIST-800-53-AU-12(c)
        - NIST-800-171-3.1.7
        - DISA-STIG-RHEL-07-030710
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit truncate tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_truncate
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_truncate.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_truncate.files | map(attribute='path') | list | first }}"
      when: find_truncate.matched > 0
    
    - name: Inserts/replaces the truncate rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540
    
    - name: Inserts/replaces the truncate rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the truncate rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540
    
    - name: Inserts/replaces the truncate rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S truncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S truncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_truncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030540
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit creat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_creat
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_creat.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_creat.files | map(attribute='path') | list | first }}"
      when: find_creat.matched > 0
    
    - name: Inserts/replaces the creat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500
    
    - name: Inserts/replaces the creat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the creat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500
    
    - name: Inserts/replaces the creat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S creat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S creat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_creat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030500
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit open tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_open
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_open.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_open.files | map(attribute='path') | list | first }}"
      when: find_open.matched > 0
    
    - name: Inserts/replaces the open rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510
    
    - name: Inserts/replaces the open rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the open rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510
    
    - name: Inserts/replaces the open rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S open -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S open -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_open
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030510
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit open_by_handle_at tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_open_by_handle_at
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_open_by_handle_at.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_open_by_handle_at.files | map(attribute='path') | list | first }}"
      when: find_open_by_handle_at.matched > 0
    
    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530
    
    - name: Inserts/replaces the open_by_handle_at rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the open_by_handle_at rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530
    
    - name: Inserts/replaces the open_by_handle_at rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S open_by_handle_at -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_open_by_handle_at
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030530
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit ftruncate tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_ftruncate
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_ftruncate.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_ftruncate.files | map(attribute='path') | list | first }}"
      when: find_ftruncate.matched > 0
    
    - name: Inserts/replaces the ftruncate rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550
    
    - name: Inserts/replaces the ftruncate rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the ftruncate rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550
    
    - name: Inserts/replaces the ftruncate rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S ftruncate -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S ftruncate -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_ftruncate
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030550
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit openat tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other DAC audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-F key=perm_mod$"
        patterns: "*.rules"
      register: find_openat
    
    - name: If existing DAC ruleset not found, use /etc/audit/rules.d/access.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/access.rules
      when: find_openat.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_openat.files | map(attribute='path') | list | first }}"
      when: find_openat.matched > 0
    
    - name: Inserts/replaces the openat rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520
    
    - name: Inserts/replaces the openat rule in rules.d when on x86_64
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "{{ item }}"
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the openat rule in /etc/audit/audit.rules when on x86
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-a always,exit -F arch=b32 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b32 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520
    
    - name: Inserts/replaces the openat rule in audit.rules when on x86_64
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
        create: yes
      with_items:
        - "-a always,exit -F arch=b64 -S openat -F exit=-EACCES -F auid>=1000 -F auid!=4294967295 -F key=access"
        - "-a always,exit -F arch=b64 -S openat -F exit=-EPERM -F auid>=1000 -F auid!=4294967295 -F key=access"
      when: audit_arch == 'b64'
      tags:
        - audit_rules_unsuccessful_file_modification_openat
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.4
        - PCI-DSS-Req-10.2.1
        - DISA-STIG-RHEL-07-030520
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit shadow tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_shadow
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_shadow.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_shadow.files | map(attribute='path') | list | first }}"
      when: find_shadow.matched > 0
    
    - name: Inserts/replaces the shadow rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/shadow -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030873
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the shadow rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/shadow -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_shadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030873
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit opasswd tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_opasswd
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_opasswd.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_opasswd.files | map(attribute='path') | list | first }}"
      when: find_opasswd.matched > 0
    
    - name: Inserts/replaces the opasswd rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030874
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the opasswd rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/security/opasswd -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_opasswd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030874
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit gshadow tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_gshadow
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_gshadow.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_gshadow.files | map(attribute='path') | list | first }}"
      when: find_gshadow.matched > 0
    
    - name: Inserts/replaces the gshadow rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/gshadow -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030872
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the gshadow rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/gshadow -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_gshadow
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030872
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit passwd tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_passwd
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_passwd.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_passwd.files | map(attribute='path') | list | first }}"
      when: find_passwd.matched > 0
    
    - name: Inserts/replaces the passwd rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/passwd -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030870
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the passwd rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/passwd -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_passwd
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030870
    
    
    #
    # What architecture are we on?
    #
    - name: Set architecture for audit group tasks
      set_fact:
        audit_arch: "b{{ ansible_architecture | regex_replace('.*(\\d\\d$)','\\1') }}"
    
    #
    # Inserts/replaces the rule in /etc/audit/rules.d
    #
    - name: Search /etc/audit/rules.d for other user/group modification audit rules
      find:
        paths: "/etc/audit/rules.d"
        recurse: no
        contains: "-k audit_rules_usergroup_modification$"
        patterns: "*.rules"
      register: find_group
    
    - name: If existing user/group modification ruleset not found, use /etc/audit/rules.d/privileged.rules as the recipient for the rule
      set_fact:
        all_files:
          - /etc/audit/rules.d/privileged.rules
      when: find_group.matched == 0
    
    - name: Use matched file as the recipient for the rule
      set_fact:
        all_files:
          - "{{ find_group.files | map(attribute='path') | list | first }}"
      when: find_group.matched > 0
    
    - name: Inserts/replaces the group rule in rules.d when on x86
      lineinfile:
        path: "{{ all_files[0] }}"
        line: "-w /etc/group -p wa -k audit_rules_usergroup_modification"
        create: yes
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030871
    
    #   
    # Inserts/replaces the rule in /etc/audit/audit.rules
    #
    - name: Inserts/replaces the group rule in /etc/audit/audit.rules
      lineinfile:
        line: "{{ item }}"
        state: present
        dest: /etc/audit/audit.rules
      with_items:
        - "-w /etc/group -p wa -k audit_rules_usergroup_modification"
      tags:
        - audit_rules_usergroup_modification_group
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AC-2(4)
        - NIST-800-53-AC-17(7)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-2(a)
        - NIST-800-53-AU-2(c)
        - NIST-800-53-AU-2(d)
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-IR-5
        - NIST-800-171-3.1.7
        - PCI-DSS-Req-10.2.5
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030871
    
    - name: Enable service auditd
      service:
        name: "{{item}}"
        enabled: "yes"
        state: "started"
      with_items:
        - auditd
      tags:
        - service_auditd_enabled
        - high_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-AU-3
        - NIST-800-53-AC-17(1)
        - NIST-800-53-AU-1(b)
        - NIST-800-53-AU-10
        - NIST-800-53-AU-12(a)
        - NIST-800-53-AU-12(c)
        - NIST-800-53-AU-14(1)
        - NIST-800-53-IR-5
        - NIST-800-171-3.3.1
        - NIST-800-171-3.3.2
        - NIST-800-171-3.3.6
        - PCI-DSS-Req-10
        - CJIS-5.4.1.1
        - DISA-STIG-RHEL-07-030000
    
    - name: "Read list of files with incorrect permissions"
      shell: "rpm -Va | grep '^.M' | cut -d ' ' -f5- | sed -r 's;^.*\\s+(.+);\\1;g'"
      register: files_with_incorrect_permissions
      failed_when: False
      changed_when: False
      check_mode: no
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010010
    
    - name: "Correct file permissions with RPM"
      shell: "rpm --quiet --setperms $(rpm -qf '{{item}}')"
      with_items: "{{ files_with_incorrect_permissions.stdout_lines }}"
      when: files_with_incorrect_permissions.stdout_lines | length > 0
      tags:
        - rpm_verify_permissions
        - high_severity
        - restrict_strategy
        - high_complexity
        - medium_disruption
        - NIST-800-53-AC-6
        - NIST-800-53-AU-9(1)
        - NIST-800-53-AU-9(3)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010010
    
    - name: "Set fact: Package manager reinstall command (dnf)"
      set_fact:
        package_manager_reinstall_cmd: dnf reinstall -y
      when: ansible_distribution == "Fedora"
      tags:
        - rpm_verify_hashes
        - high_severity
        - unknown_strategy
        - high_complexity
        - medium_disruption
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010020
    
    - name: "Set fact: Package manager reinstall command (yum)"
      set_fact:
        package_manager_reinstall_cmd: yum reinstall -y
      when: ansible_distribution == "RedHat" or ansible_distribution == "OracleLinux"
      tags:
        - rpm_verify_hashes
        - high_severity
        - unknown_strategy
        - high_complexity
        - medium_disruption
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010020
    
    - name: "Read files with incorrect hash"
      shell: "rpm -Va | grep -E '^..5.* /(bin|sbin|lib|lib64|usr)/' | sed -r 's;^.*\\s+(.+);\\1;g'"
      register: files_with_incorrect_hash
      changed_when: False
      when: package_manager_reinstall_cmd is defined
      check_mode: no
      tags:
        - rpm_verify_hashes
        - high_severity
        - unknown_strategy
        - high_complexity
        - medium_disruption
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010020
    
    - name: "Reinstall packages of files with incorrect hash"
      shell: "{{package_manager_reinstall_cmd}} $(rpm -qf '{{item}}')"
      with_items: "{{ files_with_incorrect_hash.stdout_lines }}"
      when: package_manager_reinstall_cmd is defined and (files_with_incorrect_hash.stdout_lines | length > 0)
      tags:
        - rpm_verify_hashes
        - high_severity
        - unknown_strategy
        - high_complexity
        - medium_disruption
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SI-7(1)
        - NIST-800-171-3.3.8
        - NIST-800-171-3.4.1
        - PCI-DSS-Req-11.5
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-010020
    
    - name: Ensure aide is installed
      package:
        name: "{{item}}"
        state: present
      with_items:
        - aide
      tags:
        - package_aide_installed
        - medium_severity
        - enable_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
    
    - name: "Ensure AIDE is installed"
      package:
        name: "{{item}}"
        state: present
      with_items:
        - aide
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
        - DISA-STIG-RHEL-07-020030
    
    - name: "Configure Periodic Execution of AIDE"
      cron:
        name: "run AIDE check"
        minute: 05
        hour: 04
        weekday: 0
        user: root
        job: "/usr/sbin/aide --check"
      tags:
        - aide_periodic_cron_checking
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-3(5)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
        - DISA-STIG-RHEL-07-020030
    
    - name: "Ensure AIDE is installed"
      package:
        name: "{{item}}"
        state: present
      with_items:
        - aide
      tags:
        - aide_build_database
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
    
    - name: "Build and Test AIDE Database"
      shell: /usr/sbin/aide --init
      tags:
        - aide_build_database
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
    
    # mainly to allow ansible's check mode to work
    - name: "Check whether the stock AIDE Database exists"
      stat:
        path: /var/lib/aide/aide.db.new.gz
      register: aide_database_stat
      tags:
        - aide_build_database
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
    
    - name: "Stage AIDE Database"
      copy:
        src: /var/lib/aide/aide.db.new.gz
        dest: /var/lib/aide/aide.db.gz
        backup: yes
        remote_src: yes
      when: aide_database_stat.stat.exists is defined and aide_database_stat.stat.exists
      tags:
        - aide_build_database
        - medium_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-3(d)
        - NIST-800-53-CM-3(e)
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
    
    - name: Does prelink file exist
      stat:
        path: /etc/sysconfig/prelink
      register: prelink_exists
      tags:
        - disable_prelink
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - NIST-800-171-3.13.11
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3  
    
    - name: disable prelinking
      lineinfile:
        path: /etc/sysconfig/prelink
        regexp: '^PRELINKING='
        line: 'PRELINKING=no'
      when: prelink_exists.stat.exists == True
      tags:
        - disable_prelink
        - unknown_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-CM-6(d)
        - NIST-800-53-CM-6(3)
        - NIST-800-53-SC-28
        - NIST-800-53-SI-7
        - NIST-800-171-3.13.11
        - PCI-DSS-Req-11.5
        - CJIS-5.10.1.3
    
    #
    - name: Find All Yum Repositories
      find:
        paths: "/etc/yum.repos.d/"
        patterns: "*.repo"
      register: yum_find
    
    - name: Ensure gpgcheck Enabled For All Yum Package Repositories
      with_items: "{{ yum_find.files }}"
      lineinfile:
        create: yes
        dest: "{{ item.path }}"
        regexp: '^gpgcheck'
        line: 'gpgcheck=1'
      tags:
        - ensure_gpgcheck_never_disabled
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    - name: "Security patches are up to date"
      package:
        name: "*"
        state: "latest"
      tags:
        - security_patches_up_to_date
        - high_severity
        - patch_strategy
        - low_complexity
        - high_disruption
        - NIST-800-53-SI-2
        - NIST-800-53-SI-2(c)
        - NIST-800-53-MA-1(b)
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-020260
    
    - name: "Read permission of GPG key directory"
      stat:
        path: /etc/pki/rpm-gpg/
      register: gpg_key_directory_permission
      check_mode: no
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    # It should fail if it doesn't find any fingerprints in file - maybe file was not parsed well.
    
    - name: Read signatures in GPG key
      shell: gpg --with-fingerprint '/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release' | grep 'Key fingerprint =' | tr -s ' ' | sed 's;.*= ;;g'
      changed_when: False
      register: gpg_fingerprints
      check_mode: no
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    - name: Set Fact - Valid fingerprints
      set_fact:
         gpg_valid_fingerprints: ("567E 347A D004 4ADE 55BA 8A5F 199E 2F91 FD43 1D51" "43A6 E49C 4A38 F4BE 9ABF 2A53 4568 9C88 2FA6 58E0")
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    - name: Import RedHat GPG key
      rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      when:
        (gpg_key_directory_permission.stat.mode <= '0755')
        and (( gpg_fingerprints.stdout_lines | difference(gpg_valid_fingerprints)) | length == 0)
        and (gpg_fingerprints.stdout_lines | length > 0)
        and (ansible_distribution == "RedHat")
      tags:
        - ensure_redhat_gpgkey_installed
        - high_severity
        - restrict_strategy
        - medium_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
    
    - name: "Ensure YUM Removes Previous Package Versions"
      lineinfile:
          dest: /etc/yum.conf
          regexp: ^#?clean_requirements_on_remove
          line: clean_requirements_on_remove=1
          insertafter: '\[main\]'
      tags:
        - clean_components_post_updating
        - low_severity
        - restrict_strategy
        - low_complexity
        - low_disruption
        - NIST-800-53-SI-2(6)
        - NIST-800-171-3.4.8
        - DISA-STIG-RHEL-07-020200
    
    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: no
      when: ansible_distribution == "Fedora"
    
    # Old versions of Fedora use yum
    
    - name: Ensure GPG check is globally activated (yum)
      ini_file:
        dest: "{{item}}"
        section: main
        option: gpgcheck
        value: 1
        create: False
      with_items: "/etc/yum.conf"
      when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-020050
    
    - name: Ensure GPG check is globally activated (dnf)
      ini_file:
        dest: "{{item}}"
        section: main
        option: gpgcheck
        value: 1
        create: False
      with_items: "/etc/dnf/dnf.conf"
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_globally_activated
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-53-SI-7
        - NIST-800-53-MA-1(b)
        - NIST-800-171-3.4.8
        - PCI-DSS-Req-6.2
        - CJIS-5.10.4.1
        - DISA-STIG-RHEL-07-020050
    
    - name: Check existence of yum on Fedora
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      check_mode: no
      when: ansible_distribution == "Fedora"
    
    # Old versions of Fedora use yum
    
    - name: Ensure GPG check Enabled for Local Packages (Yum)
      ini_file:
        dest: "{{item}}"
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: True
      with_items: "/etc/yum.conf"
      when: ansible_distribution == "RedHat" or ansible_distribution == "CentOS" or yum_config_file.stat.exists
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-171-3.4.8
        - DISA-STIG-RHEL-07-020060
    
    - name: Ensure GPG check Enabled for Local Packages (DNF)
      ini_file:
        dest: "{{item}}"
        section: main
        option: localpkg_gpgcheck
        value: 1
        create: True
      with_items: "/etc/dnf/dnf.conf"
      when: ansible_distribution == "Fedora"
      tags:
        - ensure_gpgcheck_local_packages
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-5(3)
        - NIST-800-171-3.4.8
        - DISA-STIG-RHEL-07-020060
    
    - name: "Set GNOME3 Screensaver Lock Delay After Activation Period"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: lock-delay
        value: uint32 5
        create: yes
      tags:
        - dconf_gnome_screensaver_lock_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - DISA-STIG-RHEL-07-010110
    
    - name: "Prevent user modification of GNOME lock-delay"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/lock-delay'
        line: '/org/gnome/desktop/screensaver/lock-delay'
        create: yes
      tags:
        - dconf_gnome_screensaver_lock_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - DISA-STIG-RHEL-07-010110
    
    - name: "Disable Full Username on Splash Screen"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: show-full-name-in-top-bar
        value: "false"
        create: yes
      tags:
        - dconf_gnome_screensaver_user_info
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
    
    - name: "Prevent user modification of GNOME show-full-name-in-top-bar"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/show-full-name-in-top-bar'
        line: '/org/gnome/desktop/screensaver/show-full-name-in-top-bar'
        create: yes
      tags:
        - dconf_gnome_screensaver_user_info
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
    
    - name: "Enable GNOME3 Screensaver Idle Activation"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: idle_activation_enabled
        value: "true"
        create: yes
      tags:
        - dconf_gnome_screensaver_idle_activation_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010100
    
    - name: "Prevent user modification of GNOME idle_activation_enabled"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/idle-activation-enabled'
        line: '/org/gnome/desktop/screensaver/idle-activation-enabled'
        create: yes
      tags:
        - dconf_gnome_screensaver_idle_activation_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010100
    
    - name: XCCDF Value inactivity_timeout_value # promote to variable
      set_fact:
        inactivity_timeout_value: !!str |-
            900
      tags:
        - always
    
    - name: "Set GNOME3 Screensaver Inactivity Timeout"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: idle-delay
        value: "{{ inactivity_timeout_value }}"
        create: yes
      tags:
        - dconf_gnome_screensaver_idle_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010070
    
    - name: "Prevent user modification of GNOME idle-delay"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/idle-delay'
        line: '/org/gnome/desktop/screensaver/idle-delay'
        create: yes
      tags:
        - dconf_gnome_screensaver_idle_delay
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(a)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010070
    
    - name: "Implement Blank Screensaver"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: picture-uri
        value: string ''
        create: yes
      tags:
        - dconf_gnome_screensaver_mode_blank
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(b)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
    
    - name: "Prevent user modification of GNOME picture-uri"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/picture-uri'
        line: '/org/gnome/desktop/screensaver/picture-uri'
        create: yes
      tags:
        - dconf_gnome_screensaver_mode_blank
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(b)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
    
    - name: "Enable GNOME3 Screensaver Lock After Idle Period"
      ini_file:
        dest: "/etc/dconf/db/local.d/00-security-settings"
        section: "org/gnome/desktop/screensaver"
        option: lock-enabled
        value: "true"
        create: yes
      tags:
        - dconf_gnome_screensaver_lock_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(b)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010060
    
    - name: "Prevent user modification of GNOME lock-enabled"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/screensaver/lock-enabled'
        line: '/org/gnome/desktop/screensaver/lock-enabled'
        create: yes
      tags:
        - dconf_gnome_screensaver_lock_enabled
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-11(b)
        - NIST-800-171-3.1.10
        - PCI-DSS-Req-8.1.8
        - CJIS-5.5.5
        - DISA-STIG-RHEL-07-010060
    
    - name: "Disable All GNOME3 Thumbnailers"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/thumbnailers
        option: disable-all
        value: "true"
        create: yes
      tags:
        - dconf_gnome_disable_thumbnailers
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
    
    - name: "Prevent user modification of GNOME3 Thumbnailers"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/thumbnailers/disable-all'
        line: '/org/gnome/desktop/thumbnailers/disable-all'
        create: yes
      tags:
        - dconf_gnome_disable_thumbnailers
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-7
    
    - name: "Disable GNOME3 Automounting - automount"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/media-handling
        option: automount
        value: "false"
        create: yes
      tags:
        - dconf_gnome_disable_automount
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-171-3.1.7
    
    - name: "Prevent user modification of GNOME3 Automounting - automount"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/media-handling/automount'
        line: '/org/gnome/desktop/media-handling/automount'
        create: yes
      tags:
        - dconf_gnome_disable_automount
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-171-3.1.7
    
    - name: "Disable GNOME3 Automounting - automount-open"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/media-handling
        option: automount-open
        value: "false"
        create: yes
      tags:
        - dconf_gnome_disable_automount
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-171-3.1.7
    
    - name: "Prevent user modification of GNOME3 Automounting - automount-open"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/media-handling/automount-open'
        line: '/org/gnome/desktop/media-handling/automount-open'
        create: yes
      tags:
        - dconf_gnome_disable_automount
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-171-3.1.7
    
    - name: "Disable GNOME3 Automounting - autorun-never"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/media-handling
        option: autorun-never
        value: "true"
        create: yes
      tags:
        - dconf_gnome_disable_automount
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-171-3.1.7
    
    - name: "Prevent user modification of GNOME3 Automounting - autorun-never"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/media-handling/autorun-never'
        line: '/org/gnome/desktop/media-handling/autorun-never'
        create: yes
      tags:
        - dconf_gnome_disable_automount
        - unknown_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-19(a)
        - NIST-800-53-AC-19(d)
        - NIST-800-53-AC-19(e)
        - NIST-800-171-3.1.7
    
    - name: "Disable Geolocation in GNOME3 - location tracking"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/system/location
        option: enabled
        value: "false"
        create: yes
      tags:
        - dconf_gnome_disable_geolocation
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
    
    - name: "Disable Geolocation in GNOME3 - clock location tracking"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/clocks
        option: gelocation
        value: "false"
        create: yes
    
    - name: "Prevent user modification of GNOME geolocation - location tracking"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/system/location/enabled'
        line: '/org/gnome/system/location/enabled'
        create: yes
      tags:
        - dconf_gnome_disable_geolocation
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
    
    - name: "Prevent user modification of GNOME geolocation - clock location tracking"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/clocks/geolocation'
        line: '/org/gnome/clocks/geolocation'
        create: yes
      tags:
        - dconf_gnome_disable_geolocation
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
    
    - name: "Disable Ctrl-Alt-Del Reboot Key Sequence in GNOME3"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/settings-daemon/plugins/media-keys
        option: logout
        value: string ''
        create: yes
      tags:
        - dconf_gnome_disable_ctrlaltdel_reboot
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.2
        - DISA-STIG-RHEL-07-TBD
    
    - name: "Prevent user modification of GNOME disablement of Ctrl-Alt-Del"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/settings-daemon/plugins/media-keys/logout'
        line: '/org/gnome/settings-daemon/plugins/media-keys/logout'
        create: yes
      tags:
        - dconf_gnome_disable_ctrlaltdel_reboot
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.2
        - DISA-STIG-RHEL-07-TBD
    
    - name: "Disable User Administration in GNOME3"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/desktop/lockdown
        option: user-administration-disabled
        value: "true"
        create: yes
      tags:
        - dconf_gnome_disable_user_admin
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-171-3.1.5
    
    - name: "Prevent user modification of GNOME3 Thumbnailers"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/desktop/lockdown/user-administration-disabled'
        line: '/org/gnome/desktop/lockdown/user-administration-disabled'
        create: yes
      tags:
        - dconf_gnome_disable_user_admin
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-171-3.1.5
    
    - name: "Disable the GNOME3 Login Restart and Shutdown Buttons"
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: disable-restart-buttons
        value: "true"
        create: yes
      tags:
        - dconf_gnome_disable_restart_shutdown
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.2
        - DISA-STIG-RHEL-07-TBD
    
    - name: "Prevent user modification of GNOME disablement of Login Restart and Shutdown Buttons"
      lineinfile:
        path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/login-screen/disable-restart-buttons'
        line: '/org/gnome/login-screen/disable-restart-buttons'
        create: yes
      tags:
        - dconf_gnome_disable_restart_shutdown
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-6
        - NIST-800-171-3.1.2
        - DISA-STIG-RHEL-07-TBD
    
    - name: "Disable GDM Automatic Login"
      ini_file:
        dest: /etc/gdm/custom.conf
        section: daemon
        option: AutomaticLoginEnable
        value: "false"
        no_extra_spaces: yes
        create: yes
      tags:
        - gnome_gdm_disable_automatic_login
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.1
        - DISA-STIG-RHEL-07-010440
    
    - name: "Disable the GNOME3 Login User List"
      ini_file:
        dest: /etc/dconf/db/gdm.d/00-security-settings
        section: org/gnome/login-screen
        option: disable-user-list
        value: "true"
        create: yes
      tags:
        - dconf_gnome_disable_user_list
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-23
    
    - name: "Prevent user modification of GNOME3 disablement of Login User List"
      lineinfile:
        path: /etc/dconf/db/gdm.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/login-screen/disable-user-list'
        line: '/org/gnome/login-screen/disable-user-list'
        create: yes
      tags:
        - dconf_gnome_disable_user_list
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-AC-23
    
    - name: "Disable GDM Guest Login"
      ini_file:
        dest: /etc/gdm/custom.conf
        section: daemon
        option: TimedLoginEnable
        value: "false"
        no_extra_spaces: yes
        create: yes
      tags:
        - gnome_gdm_disable_guest_login
        - high_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-53-CM-6(b)
        - NIST-800-171-3.1.1
        - DISA-STIG-RHEL-07-010450
    
    - name: "Disable WiFi Network Connection Creation in GNOME3"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/nm-applet
        option: disable-wifi-create
        value: "true"
        create: yes
      tags:
        - dconf_gnome_disable_wifi_create
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-171-3.1.16
    
    - name: "Prevent user modification of GNOME3 disablement of WiFi"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/nm-applet/disable-wifi-create'
        line: '/org/gnome/nm-applet/disable-wifi-create'
        create: yes
      tags:
        - dconf_gnome_disable_wifi_create
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-171-3.1.16
    
    - name: "Disable WiFi Network Notification in GNOME3"
      ini_file:
        dest: /etc/dconf/db/local.d/00-security-settings
        section: org/gnome/nm-applet
        option: suppress-wireless-networks-available
        value: "true"
        create: yes
      tags:
        - dconf_gnome_disable_wifi_notification
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-171-3.1.16
    
    - name: "Prevent user modification of GNOME3 disablement of WiFi"
      lineinfile:
        path: /etc/dconf/db/local.d/locks/00-security-settings-lock
        regexp: '^/org/gnome/nm-applet/suppress-wireless-networks-available'
        line: '/org/gnome/nm-applet/suppress-wireless-networks-available'
        create: yes
      tags:
        - dconf_gnome_disable_wifi_notification
        - medium_severity
        - unknown_strategy
        - low_complexity
        - medium_disruption
        - NIST-800-171-3.1.16
    
